{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import os\n",
    "import numpy as np\n",
    "import scipy as sp\n",
    "import scipy.optimize\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib import gridspec\n",
    "from matplotlib import rc\n",
    "from astroML.plotting import setup_text_plots\n",
    "import pdb\n",
    "setup_text_plots(fontsize=25, usetex=True)\n",
    "\n",
    "rc('font', **{'family': 'serif', 'serif': ['Computer Modern']})\n",
    "mpl.rcParams['font.size'] = 25.0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Define `Telescope` and `Planet` classes "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "class Telescope(object):\n",
    "    \n",
    "    '''\n",
    "    Parameters\n",
    "    ----------\n",
    "    \n",
    "    lammin : float\n",
    "        Minimum wavelength (um)\n",
    "    lammax : float \n",
    "        Maximum wavelength (um)\n",
    "    R : float \n",
    "        Spectral resolution (lambda / delta-lambda)\n",
    "    Tsys : float \n",
    "        Telescope temperature (K)\n",
    "    D : float\n",
    "        Telescope diameter (m) \n",
    "    emis : float \n",
    "        Telescope emissivity\n",
    "    IWA : float\n",
    "        Inner Working Angle (lambda/D)\n",
    "    OWA : float \n",
    "        Outer Working Angle (lambda/D)\n",
    "    Tput : float \n",
    "        Telescope throughput   \n",
    "    C : float \n",
    "        Raw Contrast\n",
    "    De : float \n",
    "        Dark current (s**-1)\n",
    "    DNHpix : float\n",
    "        Horizontal pixel spread of IFS spectrum\n",
    "    Re : float \n",
    "        Read noise per pixel\n",
    "    Dtmax : float\n",
    "        Maximum exposure time (hr)\n",
    "    X : float\n",
    "        Size of photometric aperture (lambda/D)\n",
    "    q : float\n",
    "        Quantum efficiency\n",
    "    '''\n",
    "    \n",
    "    # Define a constructor\n",
    "    def __init__(self, lammin=0.3,lammax=2.0,R=70.,Tput=0.2,\\\n",
    "                 D=8.0,Tsys=274.,IWA=0.5, OWA=30000.,emis=0.9,\\\n",
    "                 C=1e-10,De=1e-4,DNHpix=3.,Re=0.1,Dtmax=1.0,X=0.7,q=0.9):\n",
    "        \n",
    "        self.lammin=lammin\n",
    "        self.lammax=lammax\n",
    "        self.resolution=R\n",
    "        self.throughput=Tput\n",
    "        self.diameter=D\n",
    "        self.temperature=Tsys\n",
    "        self.IWA=IWA\n",
    "        self.OWA=OWA\n",
    "        self.emissivity=emis\n",
    "        self.contrast=C\n",
    "        \n",
    "        self.darkcurrent=De\n",
    "        self.DNHpix=DNHpix\n",
    "        self.readnoise=Re\n",
    "        self.Dtmax=Dtmax\n",
    "        self.X=X\n",
    "        self.qe=q\n",
    "    \n",
    "    def __str__(self):\n",
    "        string = 'Coronagraph: \\n------------\\n'+\\\n",
    "            '- Minimum wavelength (um) : '+\"%s\" % (self.lammin)+'\\n'+\\\n",
    "            '- Maximum wavelength (um)  : '+\"%s\" % (self.lammax)+'\\n'+\\\n",
    "            '- Spectral resolution (lambda / delta-lambda)  : '+\"%s\" % (self.resolution)+' \\n'+\\\n",
    "            '- Telescope temperature (K)  : '+\"%s\" % (self.temperature)+' \\n'+\\\n",
    "            '- Telescope diameter (m)  : '+\"%s\" % (self.diameter)+' \\n'+\\\n",
    "            '- Telescope emissivity  : '+\"%s\" % (self.emissivity)+' \\n'+\\\n",
    "            '- Inner Working Angle (lambda/D)  : '+\"%s\" % (self.IWA)+' \\n'+\\\n",
    "            '- Outer Working Angle (lambda/D)  : '+\"%s\" % (self.OWA)+' \\n'+\\\n",
    "            '- Telescope throughput  : '+\"%s\" % (self.throughput)+' \\n'+\\\n",
    "            '- Raw Contrast  : '+\"%s\" % (self.contrast)+' \\n'+\\\n",
    "            '- Dark current (s**-1)  : '+\"%s\" % (self.darkcurrent)+' \\n'+\\\n",
    "            '- Horizontal pixel spread of IFS spectrum  : '+\"%s\" % (self.DNHpix)+' \\n'+\\\n",
    "            '- Read noise per pixel  : '+\"%s\" % (self.readnoise)+' \\n'+\\\n",
    "            '- Maximum exposure time (hr)  : '+\"%s\" % (self.Dtmax)+' \\n'+\\\n",
    "            '- Size of photometric aperture (lambda/D)  : '+\"%s\" % (self.X)+' \\n'+\\\n",
    "            '- Quantum efficiency  : '+\"%s\" % (self.qe)+''\n",
    "        return string"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def lambertPhaseFunction(alpha):\n",
    "    '''Calculate the Lambertian Phase Function from the phase angle.\n",
    "    Args:\n",
    "        alpha: Planet phase angle (degrees)\n",
    "    Returns:\n",
    "        The Lambertian phase function\n",
    "    '''\n",
    "    alpha = alpha * np.pi / 180.\n",
    "    return (np.sin(alpha) + (np.pi - alpha) * np.cos(alpha)) / np.pi\n",
    "\n",
    "class Planet(object):\n",
    "    '''Parameters of the planet to be observed.\n",
    "    \n",
    "    Parameters\n",
    "    ----------\n",
    "    \n",
    "    name : string\n",
    "        Planet name from database\n",
    "    star : string\n",
    "        Stellar type of planet host star\n",
    "    d : float\n",
    "        Distance to system (pc)\n",
    "    Nez : float\n",
    "        Number of exzodis (zodis)\n",
    "    Rp : float\n",
    "        Radius of planet (Earth Radii)\n",
    "    a : float\n",
    "        Semi-major axis (AU)\n",
    "    alpha : float\n",
    "        Phase angle (deg)\n",
    "    Phi : float\n",
    "        Lambertian phase function\n",
    "    MzV : float\n",
    "        Zodiacal light surface brightness (mag/arcsec**2)\n",
    "    MezV : float\n",
    "        exozodiacal light surface brightness (mag/arcsec**2)\n",
    "    '''\n",
    "    \n",
    "    # Define a constructor\n",
    "    def __init__(self, name='earth', star='sun', d=10.0,Nez=1.0,\\\n",
    "                 Rp=1.0, a=1.0, alpha=90.,\\\n",
    "                 MzV=23.0, MezV=22.0):\n",
    "        self.name=name\n",
    "        self.star=star\n",
    "        self.distance=d\n",
    "        self.Nez=Nez\n",
    "        self.Rp=Rp\n",
    "        self.a=a\n",
    "        self._alpha=alpha\n",
    "        self._Phi = None\n",
    "        self.MzV  = MzV     # zodiacal light surface brightness (mag/arcsec**2)\n",
    "        self.MezV = MezV     # exozodiacal light surface brightness (mag/arcsec**2)\n",
    "        \n",
    "        if self._Phi is None:\n",
    "            self._Phi = lambertPhaseFunction(self._alpha)\n",
    "        else:\n",
    "            raise Exception(\"Error in Planet Phase Function (Phi)\")\n",
    "  \n",
    "    @property\n",
    "    def alpha(self):\n",
    "        return self._alpha\n",
    "  \n",
    "    @alpha.setter\n",
    "    def alpha(self, value):\n",
    "        self._alpha = value\n",
    "        self._Phi = lambertPhaseFunction(value)\n",
    "  \n",
    "    @property\n",
    "    def Phi(self):\n",
    "        return self._Phi\n",
    "  \n",
    "    @Phi.setter\n",
    "    def Phi(self, value):\n",
    "        self._Phi = value\n",
    "\n",
    "    def __str__(self):\n",
    "        string = 'Planet: \\n-------\\n'+\\\n",
    "            '- Planet name  : '+\"%s\" % (self.name)+'\\n'+\\\n",
    "            '- Stellar type of planet host star : '+\"%s\" % (self.star)+'\\n'+\\\n",
    "            '- Distance to system (pc) : '+\"%s\" % (self.distance)+'\\n'+\\\n",
    "            '- Number of exzodis (zodis) : '+\"%s\" % (self.Nez)+'\\n'+\\\n",
    "            '- Radius of planet (Earth Radii) : '+\"%s\" % (self.Rp)+'\\n'+\\\n",
    "            '- Semi-major axis (AU) : '+\"%s\" % (self.a)+'\\n'+\\\n",
    "            '- Phase angle (deg) : '+\"%s\" % (self.alpha)+'\\n'+\\\n",
    "            '- Lambertian phase function : '+\"%s\" % (self.Phi)+'\\n'+\\\n",
    "            '- Zodiacal light surface brightness (mag/arcsec**2) : '+\"%s\" % (self.MzV)+'\\n'+\\\n",
    "            '- Exozodiacal light surface brightness (mag/arcsec**2) : '+\"%s\" % (self.MezV)\n",
    "        return string"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "class Star(object):\n",
    "    \n",
    "    def __init__(self, Teff=5780.0, Rs=1.0):\n",
    "        self.Teff=Teff\n",
    "        self.Rs=Rs\n",
    "    \n",
    "    def __str__(self):\n",
    "        string = 'Star: \\n-----\\n'+\\\n",
    "            '- Effective Temperature (K)  : '+\"%s\" % (self.Teff)+'\\n'+\\\n",
    "            '- Radius (Solar Radii) : '+\"%s\" % (self.Rs)\n",
    "        return string"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "T = Telescope()\n",
    "P = Planet()\n",
    "S = Star()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coronagraph: \n",
      "------------\n",
      "- Minimum wavelength (um) : 0.3\n",
      "- Maximum wavelength (um)  : 2.0\n",
      "- Spectral resolution (lambda / delta-lambda)  : 70.0 \n",
      "- Telescope temperature (K)  : 274.0 \n",
      "- Telescope diameter (m)  : 8.0 \n",
      "- Telescope emissivity  : 0.9 \n",
      "- Inner Working Angle (lambda/D)  : 0.5 \n",
      "- Outer Working Angle (lambda/D)  : 30000.0 \n",
      "- Telescope throughput  : 0.2 \n",
      "- Raw Contrast  : 1e-10 \n",
      "- Dark current (s**-1)  : 0.0001 \n",
      "- Horizontal pixel spread of IFS spectrum  : 3.0 \n",
      "- Read noise per pixel  : 0.1 \n",
      "- Maximum exposure time (hr)  : 1.0 \n",
      "- Size of photometric aperture (lambda/D)  : 0.7 \n",
      "- Quantum efficiency  : 0.9\n"
     ]
    }
   ],
   "source": [
    "print T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.318309886184\n",
      "0.755409164929\n"
     ]
    }
   ],
   "source": [
    "print P.Phi\n",
    "P.alpha = 45.\n",
    "print P.Phi"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Star: \n",
      "-----\n",
      "- Effective Temperature (K)  : 5780.0\n",
      "- Radius (Solar Radii) : 1.0\n"
     ]
    }
   ],
   "source": [
    "print S"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def call_atlast_noise(telescope,planet,Ahr='',lamhr=''):\n",
    "    '''\n",
    "    (Ahr='', lamhr='', planet='earth', startype='sun', \\\n",
    "    lammin=0.3,lammax=2.0, Res=70., Tput=0.2, diam=8.0, Tsys=274.,\\\n",
    "    IWA=0.5, OWA=30000., d=10., Nez=1., emis=0.9, wantsnr=10.,\\\n",
    "    C=1.e-10, alpha=90., Phi=1./np.pi, planetdir='planets/', \\\n",
    "    Rp=1.0, r=1.0):\n",
    "    '''\n",
    "    '''\n",
    "    planet choices: \n",
    "        earth, venus, archean,\n",
    "        earlymars, hazyarchean, earlyvenus,\n",
    "        jupiter, saturn, uranus, neptune, mars,\n",
    "        fstarozone\n",
    "    star choices (for now):\n",
    "    sun, f2v\n",
    "    '''\n",
    "\n",
    "    whichplanet = planet.name\n",
    "    startype = planet.star\n",
    "    planetdir = '../planets/'\n",
    "\n",
    "    if Ahr == '' and lamhr == '':\n",
    "        \n",
    "        if whichplanet == 'earth':\n",
    "            fn = 'earth_quadrature_radiance_refl.dat'\n",
    "            model = np.loadtxt(planetdir+fn, skiprows=8)\n",
    "            lamhr = model[:,0] \n",
    "            radhr = model[:,1] \n",
    "            solhr = model[:,2] \n",
    "            reflhr = model[:,3]\n",
    "            Ahr   = np.pi*(np.pi*radhr/solhr) # hi-resolution reflectivity\n",
    "            planet.Rp    = 1.0     # Earth radii\n",
    "            planet.r     = 1.0     # semi-major axis (AU) \n",
    "\n",
    "        if whichplanet == 'venus':\n",
    "            fn = pldir+'Venus_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 0.95     #Earth radii\n",
    "            planet.r     = 0.72     #semi-major axis (AU)\n",
    "\n",
    "        if whichplanet == 'archean':\n",
    "            fn = pldir+'ArcheanEarth_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]     \t\n",
    "            planet.Rp    = 1.0     #Earth radii\n",
    "            planet.r     = 1.0     #semi-major axis (AU)\n",
    "\n",
    "        if whichplanet == 'earlymars':\n",
    "            fn = pldir+'EarlyMars_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 0.53     #Earth radii\n",
    "            planet.r     = 1.52     #semi-major axis (AU)\n",
    "\n",
    "        if whichplanet == 'hazyarchean':\n",
    "            fn = pldir+'Hazy_ArcheanEarth_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]     \t\n",
    "            planet.Rp    = 1.0     #Earth radii\n",
    "            planet.r     = 1.0     #semi-major axis (AU)\n",
    "\n",
    "        if whichplanet == 'earlyvenus':\n",
    "            fn = pldir+'EarlyVenus_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 0.95     #Earth radii\n",
    "            planet.r     = 0.72     #semi-major axis (AU)\n",
    "\n",
    "        if whichplanet == 'jupiter':\n",
    "            fn = pldir+'Jupiter_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 10.86     #Earth radii\n",
    "            planet.r     = 5.20     #semi-major axis (AU)\n",
    "\n",
    "        if whichplanet == 'saturn':\n",
    "            fn = pldir+'Saturn_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 9.00     #Earth radii\n",
    "            planet.r     = 9.54     #semi-major axis (AU)\n",
    "\n",
    "        if whichplanet == 'uranus':\n",
    "            fn = pldir+'Uranus_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 3.97     #Earth radii\n",
    "            planet.r     = 19.19     #semi-major axis (AU)\n",
    "\n",
    "\n",
    "        if whichplanet == 'warmuranus':\n",
    "            fn = pldir+'Uranus_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 3.97     #Earth radii\n",
    "            planet.r     = 5.20     #semi-major axis (AU)\n",
    "        \n",
    "        if whichplanet == 'warmneptune':\n",
    "            fn = pldir+'Neptune_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 3.97     #Earth radii\n",
    "            planet.r     = 5.20     #semi-major axis (AU)\n",
    "\n",
    "        if whichplanet == 'neptune':\n",
    "            fn = pldir+'Neptune_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 3.85     #Earth radii\n",
    "            planet.r     = 30.07     #semi-major axis (AU)\n",
    "\n",
    "\n",
    "        if whichplanet == 'mars':\n",
    "            fn = pldir+'Mars_geo_albedo.txt'\n",
    "            model = np.loadtxt(planetdir+fn) \n",
    "            lamhr = model[:,0] \n",
    "            Ahr   = model[:,1]\n",
    "            planet.Rp    = 0.53     #Earth radii\n",
    "            planet.r     = 1.52     #semi-major axis (AU)\n",
    "\n",
    "        if whichplanet == 'fstarozone':\n",
    "            print('fstarozone functionality not yet added') \n",
    "            #fn = 'fstarcloudy.sav'\n",
    "            #fn = 'F2V_5.e-1fCO2_1.e6H2Volc_1.e10BIF.out_toa.rad'\n",
    "            #READCOL, 'planets/'+fn, lamhr, wnhr, sunhr, fluxhr\n",
    "            #restore, 'planets/'+fn\n",
    "            #lamhr = reverse(wl_)\n",
    "            #ahr = reverse(cloudyalb_)\n",
    "            #Ahr = (2/3.) * fluxhr/(sunhr/2.) #geometric albedo & phase corrections\n",
    "            #Rp    = 1.0     #Earth radii\n",
    "            #r     = 1.72    #semi-major axis (AU)\n",
    "\n",
    "\n",
    "\n",
    "    # star parameters\n",
    "    if startype == '':\n",
    "        Teff  = 5780.   #Sun-like Teff (K)\n",
    "        Rs    = 1.      #star radius in solar radii\n",
    "    if  startype == 'sun':\n",
    "        Teff  = 5780.   #Sun-like Teff (K)\n",
    "        Rs    = 1.      #star radius in solar radii\n",
    "    if  startype == 'f2v':\n",
    "        Teff  = 7050.   #Sun-like Teff (K)\n",
    "        Rs    = 1.3      #star radius in solar radii\n",
    "    \n",
    "    star = Star(Teff=Teff, Rs=Rs)\n",
    " \n",
    "    # Shawn: \"I don't like noise.  It makes me sad.\"\n",
    "\n",
    "    lam, dlam, A, q, Cratio, cp, csp, cz, cez, cD, cR, cth, DtSNR \\\n",
    "        = atlast_noise(Ahr, lamhr, telescope, planet, star, COMPUTE_LAM=True)\n",
    "\n",
    "    return lam, dlam, A, q, Cratio, cp, csp, cz, cez, cD, cR, cth, DtSNR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "def atlast_noise(Ahr, lamhr, telescope, planet, star, wantsnr=10.0, FIX_OWA = False, COMPUTE_LAM = False,\\\n",
    "    SILENT = False):\n",
    "    \n",
    "    # Assign Class attributes to local variables\n",
    "    alpha = planet.alpha\n",
    "    Phi = planet.Phi\n",
    "    Rp = planet.Rp\n",
    "    Teff = star.Teff\n",
    "    Rs=star.Rs\n",
    "    r=planet.a\n",
    "    d=planet.distance\n",
    "    Nez=planet.Nez\n",
    "    lammin=telescope.lammin\n",
    "    lammax=telescope.lammax\n",
    "    Res=telescope.resolution\n",
    "    diam=telescope.diameter\n",
    "    Tput=telescope.throughput\n",
    "    C=telescope.contrast\n",
    "    IWA=telescope.IWA\n",
    "    OWA=telescope.OWA\n",
    "    Tsys=telescope.temperature\n",
    "    emis=telescope.emissivity\n",
    "\n",
    "    # Set key system parameters\n",
    "    De     = telescope.darkcurrent  # dark current (s**-1)\n",
    "    DNHpix = telescope.DNHpix       # horizontal pixel spread of IFS spectrum\n",
    "    Re     = telescope.readnoise    # read noise per pixel\n",
    "    Dtmax  = telescope.Dtmax        # maximum exposure time (hr)\n",
    "    X      = telescope.X            # size of photometric aperture (lambda/D)\n",
    "    q      = telescope.qe           # quantum efficiency\n",
    "  \n",
    "    # Set astrophysical parameters\n",
    "    MzV  = 23.0     # zodiacal light surface brightness (mag/arcsec**2)\n",
    "    MezV = 22.0     # exozodiacal light surface brightness (mag/arcsec**2)\n",
    "\n",
    "    # Compute angular size of lenslet\n",
    "    theta = lammin/1.e6/diam/2.*(180/np.pi*3600.) #assumes sampled at ~lambda/2D (arcsec)\n",
    "\n",
    "    # Set wavelength grid\n",
    "    if COMPUTE_LAM:\n",
    "        lam  = lammin #in [um]\n",
    "        Nlam = 1\n",
    "        while (lam < lammax):\n",
    "            lam  = lam + lam/Res\n",
    "            Nlam = Nlam +1 \n",
    "        lam    = np.zeros(Nlam)\n",
    "        lam[0] = lammin\n",
    "        for j in range(1,Nlam):\n",
    "            lam[j] = lam[j-1] + lam[j-1]/Res\n",
    "    Nlam = len(lam)\n",
    "    dlam = np.zeros(Nlam) #grid widths (um)\n",
    "    for j in range(1,Nlam-1):\n",
    "        dlam[j] = 0.5*(lam[j+1]+lam[j]) - 0.5*(lam[j-1]+lam[j])\n",
    "    #widths at edges are same as neighbor\n",
    "    dlam[0] = dlam[1]\n",
    "    dlam[Nlam-1] = dlam[Nlam-2]\n",
    "\n",
    "    # Set throughput      \n",
    "    T    = np.zeros(Nlam)\n",
    "    T[:] = Tput\n",
    "    sep  = r/d*np.sin(alpha*np.pi/180.)*np.pi/180./3600. # separation in radians\n",
    "    iIWA = ( sep < IWA*lam/diam/1.e6 )\n",
    "    if (True if True in iIWA else False):\n",
    "          T[iIWA] = 0. #zero transmission for points inside IWA have no throughput\n",
    "          if ~SILENT: \n",
    "              print 'WARNING: portions of spectrum inside IWA'\n",
    "    if FIX_OWA:\n",
    "          if ( sep > OWA*lammin/diam/1.e6 ):\n",
    "            T[:] = 0. #planet outside OWA, where there is no throughput\n",
    "            if ~SILENT: \n",
    "                print 'WARNING: planet outside fixed OWA'\n",
    "    else:\n",
    "          iOWA = ( sep > OWA*lam/diam/1.e6 )\n",
    "          if (True if True in iOWA else False):\n",
    "            T[iOWA] = 0. #points outside OWA have no throughput\n",
    "            if ~SILENT:\n",
    "                print 'WARNING: portions of spectrum outside OWA'\n",
    "\n",
    "\n",
    "    # Degrade albedo spectrum\n",
    "    if COMPUTE_LAM:\n",
    "        A = degrade_spec(Ahr,lamhr,lam,dlam=dlam)\n",
    "    else: \n",
    "        A = Ahr\n",
    "\n",
    "    # Compute fluxes\n",
    "    Fs = Fstar(lam, Teff, Rs, r, AU=True) # stellar flux on planet\n",
    "    Fp = Fplan(A, Phi, Fs, Rp, d)         # planet flux at telescope\n",
    "    Cratio = FpFs(A, Phi, Rp, r)\n",
    "\n",
    "      \n",
    "    # Compute count rates\n",
    "    cp     =  cplan(q, X, T, lam, dlam, Fp, diam)                    # planet count rate\n",
    "    cz     =  czodi(q, X, T, lam, dlam, diam, MzV)                   # solar system zodi count rate\n",
    "    cez    =  cezodi(q, X, T, lam, dlam, diam, r, \\\n",
    "        Fstar(lam,Teff,Rs,1.,AU=True), Nez, MezV)                    # exo-zodi count rate\n",
    "    csp    =  cspeck(q, T, C, lam, dlam, Fstar(lam,Teff,Rs,d), diam) # speckle count rate\n",
    "    cD     =  cdark(De, X, lam, diam, theta, DNHpix)                 # dark current count rate\n",
    "    cR     =  cread(Re, X, lam, diam, theta, DNHpix, Dtmax)          # readnoise count rate\n",
    "    cth    =  ctherm(q, X, lam, dlam, diam, Tsys, emis)              # internal thermal count rate\n",
    "    cnoise =  cp + 2*(cz + cez + csp + cD + cR + cth)                # assumes background subtraction\n",
    "    cb = (cz + cez + csp + cD + cR + cth)\n",
    "    ctot = cp + cz + cez + csp + cD + cR + cth\n",
    "    \n",
    "    '''\n",
    "    Giada: where does the factor of 2 come from?\n",
    "\n",
    "    Ty (Via email): That's due to \"background subtraction\".  \n",
    "    If you were to take a single exposure, and had the ability \n",
    "    to post-process the image to the Poisson noise limit, you \n",
    "    wouldn't have the factor of two.  However, it's not yet \n",
    "    clear that we'll be able to reach the Poisson, single observation limit.  \n",
    "    Instead, the current idea is that you take two observations (with \n",
    "    exposure time Delta t/2), with the telescope rotated by a \n",
    "    small amount between exposures, and then subtract the two images.  \n",
    "    So, for a fixed exoplanet count (cp), the roll technique would \n",
    "    give you 2x as many noise counts due to background sources as \n",
    "    would the single-observation technique. \n",
    "    See also the top of page 4 of Brown (2005).\n",
    "    '''    \n",
    "\n",
    "    # Exposure time to SNR    \n",
    "    DtSNR = np.zeros(Nlam)\n",
    "    DtSNR[:] = 0.\n",
    "    i = (cp > 0.)\n",
    "    if (True if True in i else False): \n",
    "        DtSNR[i] = (wantsnr**2.*cnoise[i])/cp[i]**2./3600. # (hr)\n",
    "    # added by Giada:\n",
    "    #if whichplanet == 'earth':\n",
    "    #    print 'Functionality not added to python version... yet.'\n",
    "        #pt5 = closest(lam, 0.55) ;same wavelength chris stark used\n",
    "        #time = dtsnr(pt5)*3600.*1\n",
    "        #save, time, filename='~/idl/noise_model/earthtime.sav'\n",
    "    #if whichplanet != 'earth': \n",
    "    #    print 'Functionality not added to python version... yet.'    \n",
    "        #then restore, '~/idl/noise_model/earthtime.sav'\n",
    "         \n",
    "    # These pieces are fundamental, but should go outside this function\n",
    "    # as they depend on the particular exposure time, not just the telescope    \n",
    "    #noisyspec = np.random.poisson(cnoise * time)\n",
    "    #planet = noisyspec - 2.*(cz + cez + csp + cD + cR + cth)*  time\n",
    "    #sun = (time * cp)/A\n",
    "    #SNR = cp*time/np.sqrt((cp+2*cb)*time)\n",
    "    #noisy = np.random.randn(len(A))*A/SNR+A\n",
    "\n",
    "    return lam, dlam, A, q, Cratio, cp, csp, cz, cez, cD, cR, cth, DtSNR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import scipy as sp\n",
    "from scipy import special\n",
    "\n",
    "def Fstar(lam, Teff, Rs, d, AU=False):\n",
    "    '''\n",
    "    stellar flux function\n",
    "    --------\n",
    "      lam - wavelength (um)\n",
    "       Teff - effective tem\n",
    "       perature (K)\n",
    "         Rs - stellar radius (solar radii)\n",
    "      d - distance to star (pc)\n",
    "         AU - flag that indicates d is in AU\n",
    "    Fstar - stellar flux (W/m**2/um)\n",
    "    '''\n",
    "    Rsun  = 6.958e8        # solar radius (m)\n",
    "    ds    = 3.08567e16     # parsec (m)\n",
    "    if AU:\n",
    "        ds = 1.495979e11     # AU (m)\n",
    "    lam= 1.e-6 * lam        # wavelength (m)\n",
    "    c1    = 3.7417715e-16    # 2*pi*h*c*c (kg m**4 / s**3)   \n",
    "    c2    = 1.4387769e-2     # h*c/k (m K)\n",
    "    power   = c2/lam/Teff     # (unitless) \n",
    "    Fs    = c1/( (lam**5.)*(np.exp(power)-1.) ) * 1.e-6\n",
    "    return Fs*(Rs*Rsun/d/ds)**2.\n",
    "\n",
    "def Fplan(A, Phi, Fstar, Rp, d, AU=False):\n",
    "    '''\n",
    "    planetary flux functiom\n",
    "    --------\n",
    "      A - planetary geometric albedo\n",
    "        Phi - planetary phase function\n",
    "      Fstar - stellar flux (W/m**2/um)\n",
    "         Rp - planetary radius (Earth radii)\n",
    "      d - distance (pc)\n",
    "         au - flag that indicates d is in AU\n",
    "    Fplan - planetary flux (W/**2/um)\n",
    "    '''\n",
    "    Re    = 6.371e6        # radius of Earth (m)\n",
    "    ds    = 3.08567e16     # parsec (m)\n",
    "    if AU:  \n",
    "        ds = 1.495979e11     # AU (m)    \n",
    "    return A*Phi*Fstar*(Rp*Re/d/ds)**2.\n",
    "\n",
    "def FpFs(A, Phi, Rp, r):\n",
    "    '''\n",
    "    planet-star flux ratio\n",
    "    --------\n",
    "      A - planetary geometric albedo\n",
    "      Phi - planetary phase function\n",
    "      Rp - planetary radius (Earth radii)\n",
    "      r - orbital distance (au)\n",
    "     FpFs - planet-star flux ratio\n",
    "     '''\n",
    "    Re = 6.371e6         # radius of Earth (m)\n",
    "    ds = 1.495979e11       # AU (m)\n",
    "    return A*Phi*(Rp*Re/r/ds)**2.    \n",
    "\n",
    "def cplan(q, X, T, lam, dlam, Fplan, D):\n",
    "    '''\n",
    "    planet photon count rate\n",
    "    --------\n",
    "    q - quantum efficiency\n",
    "    X - size of photometric aperture (lambda/D)\n",
    "    T - system throughput\n",
    "    lam - wavelength (um)\n",
    "    dlam - spectral element width (um)\n",
    "    Fplan - planetary flux (W/m**2/um)\n",
    "    D - telescope diameter (m)\n",
    "    cplan - planet photon count rate (s**-1)\n",
    "    '''\n",
    "    hc  = 1.986446e-25 # h*c (kg*m**3/s**2)\n",
    "    fpa = 1. - special.jv(0,np.pi*X)**2. - special.jv(1,np.pi*X)**2. # fraction of power in Airy disk to X*lambda/D\n",
    "    return np.pi*q*fpa*T*(lam*1.e-6/hc)*dlam*Fplan*(D/2)**2.\n",
    "\n",
    "def czodi(q, X, T, lam, dlam, D, Mzv, SUN=False):\n",
    "    '''\n",
    "    zodiacal light count rate\n",
    "    --------\n",
    "      q - quantum efficiency\n",
    "        X - size of photometric aperture (lambda/D)\n",
    "        T - system throughput\n",
    "      lam - wavelength (um)\n",
    "         dlam - spectral element width (um)\n",
    "        D - telescope diameter (m)\n",
    "      MzV - zodiacal light surface brightness (mag/arcsec**2)\n",
    "         /SUN - set to use WMO solar spectrum\n",
    "    czodi - zodiacal light photon count rate (s**-1)\n",
    "    '''\n",
    "    hc    = 1.986446e-25 # h*c (kg*m**3/s**2)\n",
    "    F0V   = 3.6e-8     # zero-mag V-band flux (W/m**2/um)\n",
    "    FsolV = 1.86e+3    # Solar V-band flux at 1 AU\n",
    "    if SUN:\n",
    "      fn    = '/Users/robinson/Work/noise/wmo_solar_spectrum.dat'\n",
    "      # Read-in solar spectrum and interpolate it onto lam using degrade_spec()\n",
    "      # READCOL, fn, lamsol, Fsol, SKIPLINE=32, /SILENT\n",
    "      # Fsol  = DEGRADE_SPEC(Fsol,lamsol,lam,DLAM=dlam) ; degrade solar spectrum (W/m**2/um)\n",
    "    else: \n",
    "        Teffs  = 5778. # Sun effective temperature\n",
    "        Rs  = 1.       # Sun radius (in solar radii)\n",
    "        Fsol  = Fstar(lam, Teffs, Rs, 1., AU=True)\n",
    "    rat   = np.zeros(len(lam))\n",
    "    rat[:]= Fsol[:]/FsolV # ratio of solar flux to V-band solar flux\n",
    "    Omega = np.pi*(X*lam*1.e-6/D*180.*3600./np.pi)**2. # aperture size (arcsec**2)\n",
    "    return np.pi*q*T*Omega*dlam*(lam*1.e-6/hc)*(D/2)**2.*rat*F0V*10**(-Mzv/2.5)\n",
    "\n",
    "def cezodi(q, X, T, lam, dlam, D, r, Fstar, Nez, Mezv, SUN=False):\n",
    "    '''\n",
    "    exozodiacal light count rate\n",
    "    --------\n",
    "      q - quantum efficiency\n",
    "      X - size of photometric aperture (lambda/D)\n",
    "      T - system throughput\n",
    "      lam - wavelength (um)\n",
    "         dlam - spectral element width (um)\n",
    "      D - telescope diameter (m)\n",
    "      r - orbital distance (au)\n",
    "        Fstar - host star spectrum *at 1 au* (W/m**2/um)\n",
    "      Nez - number of exozodis\n",
    "         MezV - exozodiacal light surface brightness (mag/arcsec**2)\n",
    "         /SUN - set to use WMO solar spectrum\n",
    "     cezodi - exozodiacal light photon count rate (s**-1)\n",
    "     '''\n",
    "    hc    = 1.986446e-25 # h*c (kg*m**3/s**2)\n",
    "    F0V   = 3.6e-8     # zero-mag V-band flux (W/m**2/um)\n",
    "    FsolV = 1.86e+3    # Solar V-band flux at 1 AU\n",
    "    if SUN:\n",
    "        fn    = '/Users/robinson/Work/noise/wmo_solar_spectrum.dat'\n",
    "        # Read-in solar spectrum and interpolate it onto lam using degrade_spec()\n",
    "        # READCOL, fn, lamsol, Fsol, SKIPLINE=32, /SILENT\n",
    "        # Fsol  = DEGRADE_SPEC(Fsol,lamsol,lam,DLAM=dlam) ; degrade solar spectrum (W/m**2/um)\n",
    "    else:\n",
    "        Teffs  = 5778.   # Sun effective temperature\n",
    "        Rs  = 1.       # Sun radius (in solar radii)\n",
    "        #Fsol  = Fstar(lam, Teffs, Rs, 1., AU=True)  # Sun as blackbody (W/m**2/um)\n",
    "    rat   = np.zeros(len(lam))\n",
    "    rat[:]= Fstar[:]/FsolV # ratio of solar flux to V-band solar flux\n",
    "    Omega = np.pi*(X*lam*1.e-6/D*180.*3600./np.pi)**2. # aperture size (arcsec**2)\n",
    "    return np.pi*q*T*Omega*dlam*(lam*1.e-6/hc)*(D/2)**2.*(1./r)**2.*rat*Nez*F0V*10**(-Mezv/2.5)\n",
    "\n",
    "def cspeck(q, T, C, lam, dlam, Fstar, D):\n",
    "    '''\n",
    "    speckle count rate\n",
    "    --------\n",
    "      q - quantum efficiency\n",
    "        T - system throughput\n",
    "        C - design contrast\n",
    "      lam - wavelength (um)\n",
    "         dlam - spectral element width (um)\n",
    "      D - telescope diameter (m)\n",
    "        Fstar - host star spectrum at distance to system (W/m**2/um)\n",
    "     cspeck - speckle photon count rate (s**-1)\n",
    "     '''\n",
    "    hc    = 1.986446e-25 # h*c (kg*m**3./s**2.)\n",
    "    return np.pi*q*T*C*dlam*Fstar*(lam*1.e-6/hc)*(D/2.)**2.\n",
    "\n",
    "def cdark(De, X, lam, D, theta, DNhpix, IMAGE=False):\n",
    "    '''\n",
    "    dark count rate\n",
    "    --------\n",
    "       De - dark count rate (s**-1)\n",
    "        X - size of photometric aperture (lambda/D)\n",
    "      lam - wavelength (um)\n",
    "        D - telescope diameter (m)\n",
    "        theta - angular size of lenslet or pixel (arcsec**2)\n",
    "       DNhpix - number of pixels spectrum spread over in horizontal, for IFS\n",
    "        IMAGE - keyword set to indicate imaging mode (not IFS)\n",
    "        cdark - dark count rate (s**-1)\n",
    "    '''\n",
    "    Omega = np.pi*(X*lam*1.e-6/D*180.*3600./np.pi)**2. # aperture size (arcsec**2)\n",
    "    Npix  = Omega/np.pi/theta**2.\n",
    "    if ~IMAGE: \n",
    "        Npix = 2*DNhpix*Npix\n",
    "    return De*Npix\n",
    "\n",
    "def cread(Re, X, lam, D, theta, DNhpix, Dtmax, IMAGE=False):\n",
    "    '''\n",
    "    read noise count rate\n",
    "    --------\n",
    "       Re - read noise counts per pixel\n",
    "        X - size of photometric aperture (lambda/D)\n",
    "      lam - wavelength (um)\n",
    "        D - telescope diameter (m)\n",
    "        theta - angular size of lenslet or pixel (arcsec**2)\n",
    "        Dtmax - maximum exposure time (hr)\n",
    "        IMAGE - keyword set to indicate imaging mode (not IFS)\n",
    "    cread - read count rate (s**-1)\n",
    "    '''\n",
    "    Omega = np.pi*(X*lam*1.e-6/D*180.*3600./np.pi)**2. # aperture size (arcsec**2)\n",
    "    Npix  = Omega/np.pi/theta**2.\n",
    "    if ~IMAGE: \n",
    "        Npix = 2*DNhpix*Npix  \n",
    "    return Npix/(Dtmax*3600.)*Re\n",
    "\n",
    "def ctherm(q, X, lam, dlam, D, Tsys, emis):\n",
    "    '''\n",
    "    telescope thermal count rate\n",
    "    --------\n",
    "        q - quantum efficiency\n",
    "        X - size of photometric aperture (lambda/D)\n",
    "      lam - wavelength (um)\n",
    "         dlam - spectral element width (um)\n",
    "        D - telescope diameter (m)\n",
    "         Tsys - telescope/system temperature (K)\n",
    "         emis - telescope/system emissivity\n",
    "     ctherm - telescope thermal photon count rate (s**-1)\n",
    "    '''\n",
    "    hc    = 1.986446e-25  # h*c (kg*m**3/s**2)\n",
    "    c1    = 3.7417715e-16 # 2*pi*h*c*c (kg m**4 / s**3)   \n",
    "    c2    = 1.4387769e-2  # h*c/k (m K)\n",
    "    lambd= 1.e-6*lam     # wavelength (m)\n",
    "    power   = c2/lambd/Tsys\n",
    "    Bsys  = c1/( (lambd**5.)*(np.exp(power)-1.) )*1.e-6/np.pi # system Planck function (W/m**2/um/sr)\n",
    "    Omega = np.pi*(X*lam*1.e-6/D)**2. # aperture size (sr**2)\n",
    "    return np.pi*q*dlam*emis*Bsys*Omega*(lam*1.e-6/hc)*(D/2)**2."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from scipy import interpolate\n",
    "\n",
    "def degrade_spec(specHR, lamHR, lamLR, dlam=[]):\n",
    "    \n",
    "    # Store input variables (not 100% necessary) \n",
    "    lamHI  = np.array(lamHR)\n",
    "    spec   = np.array(specHR)\n",
    "    lamLO  = np.array(lamLR)\n",
    "    if len(dlam) != 0:\n",
    "        dlamLO = dlam \n",
    "    \n",
    "    \n",
    "    # Reverse ordering if wl vector is decreasing with index\n",
    "    if lamHR[0] > lamHR[1]:\n",
    "        lamHI = np.array(lamHR[::-1])\n",
    "        spec = np.array(specHR[::-1])\n",
    "    if lamLR[0] > lamLR[1]:\n",
    "        lamLO = np.array(lamLR[::-1])\n",
    "        if len(dlam) != 0:\n",
    "            dlamLO = dlam[::-1] \n",
    "    \n",
    "    # Number of gridpoints in output\n",
    "    Nspec = len(lamLO)\n",
    "    specLO = np.zeros(Nspec)\n",
    "    \n",
    "    # Loop over all spectral elements\n",
    "    for i in range(Nspec):\n",
    "        #print 'i=',i\n",
    "        # If dlam not provided, must determine bin widths\n",
    "        if len(dlam) == 0:\n",
    "            # Define short and long wavelength edges of the \n",
    "            # low res grid, special cases at the edge of the grid\n",
    "            if i > 0 and i < Nspec-1:\n",
    "                #print \"loop1\"\n",
    "                lamS = 0.5*(lamLO[i-1] + lamLO[i])\n",
    "                lamL = 0.5*(lamLO[i+1] + lamLO[i])\n",
    "            elif i == 0:\n",
    "                #print \"loop2\"\n",
    "                lamS = lamLO[i] - 0.5*(lamLO[i+1] - lamLO[i])\n",
    "                lamL = 0.5*(lamLO[i+1] + lamLO[i])\n",
    "            else:\n",
    "                #print \"loop3\"\n",
    "                lamS = 0.5*(lamLO[i-1] + lamLO[i])\n",
    "                lamL = lamLO[i] + 0.5*(lamLO[i] - lamLO[i-1])\n",
    "        else:\n",
    "            lamS = lamLO[i] - 0.5*dlamLO[i]\n",
    "            lamL = lamLO[i] + 0.5*dlamLO[i]\n",
    "                \n",
    "        # Elements of hi-res grid within the low-res element\n",
    "        eps = 1e-10\n",
    "        iss = (lamHI - lamS >= eps) & (lamHI - lamL <= eps)\n",
    "        \n",
    "        # If there aren't any high-res elements within low\n",
    "        # res element, then error\n",
    "        check1 = False if True in iss else True\n",
    "        if check1:\n",
    "            print(\"Error in DEGRADE_SPECTRUM: wavelength grids do not sync\")\n",
    "        \n",
    "        # If 3 of less elements of spectrum within low-res gridpoint, \n",
    "        # then do an interpolation, otherwise, integrate the high-res \n",
    "        # spectrum over the low-res element, distributing the integrated\n",
    "        # energey into the low-res element\n",
    "        if len(lamHI[iss]) <= 3:\n",
    "            interpfunc = interpolate.interp1d(lamHI[iss], spec[iss], kind='linear',bounds_error=False)            \n",
    "            specs = interpfunc(lamLO[i])\n",
    "        else:\n",
    "            interpfunc = interpolate.interp1d(lamHI[iss], spec[iss], kind='linear',bounds_error=False, fill_value=0.0)\n",
    "            speci = np.hstack([interpfunc(lamS), spec[iss], interpfunc(lamL)])\n",
    "            #print speci\n",
    "            lami = np.hstack([lamS,lamHI[iss],lamL])\n",
    "            #print lami\n",
    "            specs = np.trapz(speci,x=lami) / (lamL - lamS)\n",
    "            #print specs\n",
    "        \n",
    "        # Insert result into output array\n",
    "        specLO[i] = specs\n",
    "    \n",
    "    return specLO"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import imp, sys\n",
    "from types import ModuleType, FunctionType, StringType\n",
    "\n",
    "class Input(object):\n",
    "    '''\n",
    "    '''\n",
    "    def __init__(self, input_type = ''):\n",
    "    \n",
    "        if (input_type == 'telescope') or (input_type == 'planet') or (input_type == 'star'):\n",
    "            pass\n",
    "        else:\n",
    "            print \"Error: unrecognized input_type. Please use 'telescope', 'planet', or 'star'.\"\n",
    "            return\n",
    "    \n",
    "        default_input_file = '../inputs/input_default_'+input_type+'.py'\n",
    "        user_input_file = '../inputs/input_user_'+input_type+'.py'\n",
    "           \n",
    "        try:\n",
    "            del sys.modules['input_usr']\n",
    "            del sys.modules['input']\n",
    "        except KeyError:\n",
    "            pass\n",
    "            \n",
    "        \n",
    "        self._input = imp.load_source(\"input\", default_input_file)            # Load default inputs into self._input\n",
    "\n",
    "        self._input_usr = imp.load_source(\"input_usr\", user_input_file)       # Load user inputs into self._input_usr\n",
    "\n",
    "        self._input.__dict__.update(self._input_usr.__dict__)                 # Update self._input with user values\n",
    "  \n",
    "        inp_dict = self._input.__dict__\n",
    "\n",
    "        for key, value in inp_dict.items():\n",
    "            if key.startswith('__') or isinstance(value, ModuleType) or isinstance(value, FunctionType):\n",
    "                inp_dict.pop(key, None)    \n",
    "        print inp_dict\n",
    "        self.__dict__.update(inp_dict)                                        # Make all parameters accessible as self.param\n",
    "    \n",
    "        del self._input\n",
    "        del self._input_usr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "ret = call_atlast_noise(T,P)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'diameter': 8.0, 'DNHpix': 3.0, 'lammin': 0.3, 'darkcurrent': 0.0001, 'X': 0.7, 'lammax': 2.0, 'temperature': 274.0, 'IWA': 0.5, 'OWA': 30000.0, 'qe': 0.9, 'contrast': 1e-10, 'Dtmax': 1.0, 'throughput': 0.2, 'readnoise': 0.1, 'resolution': 70.0, 'emissivity': 0.9}\n"
     ]
    }
   ],
   "source": [
    "t = Input(input_type='telescope')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'a': 1.0, 'distance': 10.0, 'Phi': 0.3183098861837907, 'star': 'sun', 'name': 'earth', 'MezV': 22.0, 'MzV': 23.0, 'Rp': 1.0, 'Nez': 1.0, 'alpha': 90.0}\n"
     ]
    }
   ],
   "source": [
    "p = Input(input_type='planet')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Teff': 5780.0, 'Rs': 1.0}\n"
     ]
    }
   ],
   "source": [
    "s = Input(input_type='star')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "ret = call_atlast_noise(t,p)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Update `observe_smart()` for new classes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def rad(path, plot=False, getdata=True, ptype='TOA', ptitle='', xran=[1,5], save=False):\n",
    "\n",
    "    import matplotlib.pyplot as plt\n",
    "    import matplotlib as mpl\n",
    "    from matplotlib import gridspec\n",
    "    from matplotlib import rc\n",
    "    mpl.rcParams['font.size'] = 20.0\n",
    "    \n",
    "    rad_data = np.genfromtxt(path, skip_header=0)\n",
    "    wl = rad_data[:,0]\n",
    "    wno = rad_data[:,1]\n",
    "    solar_spec = rad_data[:,2]\n",
    "    TOA_flux = rad_data[:,3] #W/m**2/um\n",
    "    rad_streams = rad_data[:,4::]\n",
    "    \n",
    "    plot_rad=False\n",
    "    \n",
    "    if ptype == 'TOA':\n",
    "        y = TOA_flux\n",
    "        ytitle = r'TOA Flux [W m$^{-2} \\mu $m$^{-1}$]'\n",
    "    elif ptype == 'reflect':\n",
    "        y = TOA_flux / solar_spec\n",
    "        ytitle = r'Reflectance'\n",
    "    elif ptype == 'solar':\n",
    "        y = solar_spec\n",
    "        ytitle = r'Solar Flux [W m$^{-2} \\mu $m$^{-1}$]' \n",
    "    elif ptype == 'rad':\n",
    "        y = rad_streams\n",
    "        plot = False\n",
    "        plot_rad = True\n",
    "    else:\n",
    "        plot = False\n",
    "        print \"Invalid ptype. Must choose betweem 'TOA', 'reflect', 'solar', and 'rad'.\"\n",
    "    \n",
    "    if plot:\n",
    "        x = wl[(wl > xran[0]) & (wl < xran[1])]\n",
    "        y = y[(x > xran[0]) & (x < xran[1])]\n",
    "        fig = plt.figure(figsize=(10,7))\n",
    "        gs = gridspec.GridSpec(1,1)\n",
    "        ax0 = plt.subplot(gs[0])\n",
    "        ax0.plot(x, y, lw=2.0, label=ptitle)\n",
    "        ax0.set_xlabel(r'$\\lambda$ $[\\mu m]$')\n",
    "        ax0.set_ylabel(ytitle)\n",
    "        ax0.set_title('')\n",
    "        #ax0.semilogx()\n",
    "        ax0.set_xlim([np.min(x), np.max(x)])\n",
    "        ax0.set_ylim([np.min(y), np.max(y)])\n",
    "\tif save:\n",
    "\t    savetag = 'plot_rad_'+ptype+'_'+ptitle+'.pdf'\n",
    "            fig.savefig(savetag)\n",
    "            print 'Saved plot: '+savetag\n",
    "\tfig.show();\n",
    "        \n",
    "    if plot_rad:\n",
    "        x = wl[(wl > xran[0]) & (wl < xran[1])]\n",
    "        y = y[(x > xran[0]) & (x < xran[1])]\n",
    "        num = len(rad_streams[0,:])\n",
    "        fig = plt.figure(figsize=(10,7))\n",
    "        gs = gridspec.GridSpec(1,1)\n",
    "        ax0 = plt.subplot(gs[0])\n",
    "        for i in range(num):\n",
    "            ax0.plot(x, y[:,i], lw=2.0, label='Stream '+str(i+1))\n",
    "        ax0.set_xlabel(r'$\\lambda$ $[\\mu m]$')\n",
    "        ax0.set_ylabel(r'Radiance [W m$^{-2} \\mu $m$^{-1}$ sr$^{-1}$]')\n",
    "        leg = ax0.legend(loc=1)\n",
    "        leg.get_frame().set_alpha(0.8)\n",
    "\tif save:\n",
    "            savetag = 'plot_rad_'+ptype+'_'+ptitle+'.pdf'\n",
    "            fig.savefig(savetag)\n",
    "            print 'Saved plot: '+savetag\n",
    "\tfig.show();\n",
    "        \n",
    "    if getdata:\n",
    "        return wl, wno, solar_spec, TOA_flux, rad_streams\n",
    "    else:\n",
    "        return\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def generate_observation(wlhr, Ahr, itime, telescope, planet, star,\n",
    "                         ref_lam=False, tag='', plot=True, saveplot=False, savedata=False):    \n",
    "    \"\"\"\n",
    "    Parameters\n",
    "    ----------\n",
    "    wlhr : float\n",
    "        Wavelength array (microns)\n",
    "    Ahr : float\n",
    "        Geometric albedo spectrum array\n",
    "    itime : float\n",
    "        Integration time (hours)\n",
    "    telescope : Telescope\n",
    "        Telescope object\n",
    "    planet : Planet\n",
    "        Planet object\n",
    "    star : Star \n",
    "        Star object\n",
    "    tag : string\n",
    "        ID for output files\n",
    "    plot : boolean\n",
    "        Set to True to make plot\n",
    "    saveplot : boolean\n",
    "        Set to True to save the plot as a PDF\n",
    "    savedata : boolean\n",
    "        Set to True to save data file of observation\n",
    "    \n",
    "    Returns\n",
    "    -------\n",
    "    lam : array\n",
    "        Wavelength grid of observed spectrum\n",
    "    spec : array\n",
    "        Albedo grid of observed spectrum\n",
    "    sig : array\n",
    "        One sigma errorbars on albedo spectrum\n",
    "    \n",
    "    Output\n",
    "    ------\n",
    "    If saveplot=True then plot will be saved\n",
    "    If savedata=True then data will be saved\n",
    "    \"\"\"\n",
    "    \n",
    "    # Skip call_noise and just call: noise \n",
    "    lam, dlam, A, q, Cratio, cp, csp, cz, cez, cD, cR, cth, DtSNR = \\\n",
    "        atlast_noise(Ahr, wlhr, telescope, planet, star, wantsnr=10.0, COMPUTE_LAM=True)\n",
    "        \n",
    "    # Calculate background photon count rate\n",
    "    cb = (cz + cez + csp + cD + cR + cth)\n",
    "    \n",
    "    # Calculate the SNR of observation\n",
    "    time = itime * 3600. # Convert hours to seconds\n",
    "    SNR = calc_SNR(time, cp, cb)\n",
    "    \n",
    "    # Generate noisy spectrum by drawing data points from a normal distribution\n",
    "    spec, sig = draw_noisy_spec(A, SNR)\n",
    "\n",
    "    \n",
    "    if plot:\n",
    "    \n",
    "        # Set string for plot text\n",
    "        plot_text = r'Distance = '+\"{:.1f}\".format(planet.distance)+' pc'+\\\n",
    "        '\\n Integration time = '+\"{:.0f}\".format(itime)+' hours'\n",
    "    \n",
    "        # If a reference wavelength is specified then return the SNR at that wl \n",
    "        # corresponding to the integration time given\n",
    "        if ref_lam:\n",
    "            ref_SNR = SNR[find_nearest(lam,ref_lam)] \n",
    "            plot_text = plot_text + '\\n SNR = '+\"{:.1f}\".format(ref_SNR)+\\\n",
    "                ' at '+\"{:.2f}\".format(ref_lam)+r' $\\mu$m'    \n",
    "        \n",
    "        # Plot observed spectrum; save pdf if saveplot=True \n",
    "        lammin,lammax = np.min(lam), np.max(lam)\n",
    "        plot_tag = 'observed_'+tag+'.pdf'\n",
    "        fig = plt.figure(figsize=(15,10))\n",
    "        gs = gridspec.GridSpec(1, 1) \n",
    "        ax0 = plt.subplot(gs[0])\n",
    "        ax0.plot(lam, A, alpha=0.7, color='orange', drawstyle='steps-mid', lw=2.0)\n",
    "        ax0.errorbar(lam, spec, yerr=sig, fmt='o', color='k')\n",
    "        ax0.set_ylabel('Reflectivity')\n",
    "        ax0.set_xlabel('Wavelength [$\\mu$m]')\n",
    "        ax0.set_xlim([lammin-0.1,lammax+0.1])\n",
    "        #ax0.set_ylim([-0.01,1.01])\n",
    "        ax0.text(0.99, 0.99, plot_text,\\\n",
    "             verticalalignment='top', horizontalalignment='right',\\\n",
    "             transform=ax0.transAxes,\\\n",
    "             color='black', fontsize=20)\n",
    "        # Save plot if saveplot==True\n",
    "        if saveplot:\n",
    "            fig.savefig(plot_tag)\n",
    "            print 'Saved: '+plot_tag\n",
    "        fig.show()\n",
    "    \n",
    "    # Save Synthetic data file (wavelength, albedo, error) if savedata=True\n",
    "    if savedata:\n",
    "        data_tag = 'observed_'+tag+'.txt'\n",
    "        y_sav = np.array([lam,spec,sig])\n",
    "        np.savetxt(data_tag, y_sav.T)\n",
    "        print 'Saved: '+data_tag\n",
    "    \n",
    "    # Return Synthetic data and high-res spec\n",
    "    \n",
    "    return lam, spec, sig\n",
    "    \n",
    "\n",
    "def smart_observation(radfile, itime, telescope, planet, star,\n",
    "                         ref_lam=False, tag='', plot=True, saveplot=False, savedata=False):   \n",
    "    \"\"\"Uses coronagraph noise model to create an observation of high resolution SMART output.\n",
    "    \n",
    "    Parameters\n",
    "    ----------\n",
    "    radfile : string\n",
    "        Location and name of file to be read in\n",
    "    itime : float\n",
    "        Integration time (hours)\n",
    "    telescope : Telescope\n",
    "        Telescope object\n",
    "    planet : Planet\n",
    "        Planet object\n",
    "    star : Star \n",
    "        Star object\n",
    "    tag : string\n",
    "        ID for output files\n",
    "    plot : boolean\n",
    "        Set to True to make plot\n",
    "    saveplot : boolean\n",
    "        Set to True to save the plot as a PDF\n",
    "    savedata : boolean\n",
    "        Set to True to save data file of observation\n",
    "    \n",
    "    Returns\n",
    "    ----------\n",
    "    lam : array\n",
    "        Wavelength grid of observed spectrum\n",
    "    spec : array\n",
    "        Albedo grid of observed spectrum\n",
    "    sig : array\n",
    "        One sigma errorbars on albedo spectrum\n",
    "    rwl : array\n",
    "        Wavelength grid of SMART output\n",
    "    Ahr : array\n",
    "        Albedo grid of SMART output\n",
    "    \n",
    "    Output\n",
    "    ---------\n",
    "    If saveplot=True then plot will be saved\n",
    "    If savedata=True then data will be saved\n",
    "    \"\"\"\n",
    "\n",
    "    # Read-in .rad file\n",
    "    wlhr, wno, solar_spec, TOA_flux, rad_streams = rad(radfile,getdata=True)\n",
    "    \n",
    "    # Calculate Hi-res reflectivity spectrum\n",
    "    Ahr = (TOA_flux / solar_spec) * np.pi / planet.Phi\n",
    "    \n",
    "    # Skip call_noise and just call: noise \n",
    "    lam, dlam, A, q, Cratio, cp, csp, cz, cez, cD, cR, cth, DtSNR = \\\n",
    "        atlast_noise(Ahr, wlhr, telescope, planet, star, wantsnr=10.0, COMPUTE_LAM=True)\n",
    "        \n",
    "    # Calculate background photon count rate\n",
    "    cb = (cz + cez + csp + cD + cR + cth)\n",
    "    \n",
    "    # Calculate the SNR of observation\n",
    "    time = itime * 3600. # Convert hours to seconds\n",
    "    SNR = calc_SNR(time, cp, cb)\n",
    "    \n",
    "    # Generate noisy spectrum by drawing data points from a normal distribution\n",
    "    spec, sig = draw_noisy_spec(A, SNR)\n",
    "\n",
    "    if plot:\n",
    "    \n",
    "        # Set string for plot text\n",
    "        plot_text = r'Distance = '+\"{:.1f}\".format(planet.distance)+' pc'+\\\n",
    "        '\\n Integration time = '+\"{:.0f}\".format(itime)+' hours'\n",
    "    \n",
    "        # If a reference wavelength is specified then return the SNR at that wl \n",
    "        # corresponding to the integration time given\n",
    "        if ref_lam:\n",
    "            ref_SNR = SNR[find_nearest(lam,ref_lam)] \n",
    "            plot_text = plot_text + '\\n SNR = '+\"{:.1f}\".format(ref_SNR)+\\\n",
    "                ' at '+\"{:.2f}\".format(ref_lam)+r' $\\mu$m'    \n",
    "        \n",
    "        # Plot observed spectrum; save pdf if saveplot=True \n",
    "        lammin,lammax = np.min(lam), np.max(lam)\n",
    "        #ymin,ymax = np.min(A), np.max(A)\n",
    "        plot_tag = 'observed_smart_'+tag+'.pdf'\n",
    "        fig = plt.figure(figsize=(15,10))\n",
    "        gs = gridspec.GridSpec(1, 1) \n",
    "        ax0 = plt.subplot(gs[0])\n",
    "        #ax0.plot(wlhr, Ahr, alpha=0.2, color='k')\n",
    "        ax0.plot(lam, A, alpha=0.7, color='orange', drawstyle='steps-mid', lw=2.0)\n",
    "        ax0.errorbar(lam, spec, yerr=sig, fmt='o', color='k')\n",
    "        ax0.set_ylabel('Reflectivity')\n",
    "        ax0.set_xlabel('Wavelength [$\\mu$m]')\n",
    "        ax0.set_xlim([lammin-0.1,lammax+0.1])\n",
    "        #ax0.set_ylim([-0.01,ymax+0.1])\n",
    "        #ax0.set_ylim([-0.01,1.01])\n",
    "        ax0.text(0.99, 0.99, plot_text,\\\n",
    "             verticalalignment='top', horizontalalignment='right',\\\n",
    "             transform=ax0.transAxes,\\\n",
    "             color='black', fontsize=20)\n",
    "        # Save plot if saveplot==True\n",
    "        if saveplot:\n",
    "            fig.savefig(plot_tag)\n",
    "            print 'Saved: '+plot_tag\n",
    "        fig.show()\n",
    "    \n",
    "    # Save Synthetic data file (wavelength, albedo, error) if savedata=True\n",
    "    if savedata:\n",
    "        data_tag = 'observed_smart_'+tag+'.txt'\n",
    "        y_sav = np.array([lam,spec,sig])\n",
    "        np.savetxt(data_tag, y_sav.T)\n",
    "        print 'Saved: '+data_tag\n",
    "    \n",
    "    # Return Synthetic data and high-res spec\n",
    "    \n",
    "    return lam, spec, sig, wlhr, Ahr\n",
    "    \n",
    "def calc_SNR(itime, cp, cb, poisson=2.):\n",
    "    \n",
    "    cnoise = cp + poisson*cb\n",
    "    SNR = cp*itime / np.sqrt(cnoise*itime)\n",
    "    \n",
    "    return SNR\n",
    "\n",
    "def draw_noisy_spec(spectrum, SNR, apparent=False):\n",
    "    \n",
    "    if apparent:\n",
    "        # Scale geometric albedo to apparent albedo (as if lambertian sphere) for quadrature\n",
    "        scale = 3.*np.pi/2.\n",
    "    else:\n",
    "        scale = 1.0  \n",
    "    \n",
    "    # Compute \"sigma\"\n",
    "    sigma = scale * spectrum / SNR\n",
    "    # Draw data points from normal distribution    \n",
    "    spec_noise = np.random.randn(len(spectrum))*sigma + scale*spectrum\n",
    "    \n",
    "    return spec_noise, sigma\n",
    "\n",
    "def find_nearest(array,value):\n",
    "    idx = (np.abs(array-value)).argmin()\n",
    "    return idx\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "T.lammax = 1.6 \n",
    "P.alpha = 90."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8d538d6690>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dat = smart_observation('../planets/F2V_5.e-1fCO2_1.e6H2Volc_1.e10BIF.out_toa.rad', 10.0, T, P, S, saveplot=False, savedata=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA6MAAAJ/CAYAAACN7QX8AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3WtsnNl95/nfX21Mkh5YFKlGgiE9MyqWcrGRjnWhnGyQ\nWNUtUc4sJANu3bxTBAZIdOsXO28sNalgalQ0BxBFtbHrzIuWSBmYSVjA6hrEkl+ki1TXLgYLxZJI\nJb2B12sXHwUDMb2BRZEKJpM14D77oi6qKj51YbEurKrvByCq6jzPc54/n1ID/Pc553/MOScAAAAA\nABppU7MDAAAAAAB0HpJRAAAAAEDDkYwCAAAAABqOZBQAAAAA0HAkowAAAACAhiMZBQAAAAA03Gea\nHUAjmNlJSbskLUsKppsvOufm19jPPkmDkn4sqVtSj3PufC1jBQAAAIBO0PbJqJldkXTDOTeV03ZS\n0mMz2+Wce1JhP6ck7XTOvZvTts/MPnTOHah54AAAAADQxsw51+wY6iY9khlwzl3zObYkKemc21NB\nP1skLUnqcs79fcGxD5VKdlfdAwAAAADgr93XjA5KmjSzHT7HliT1V9jPKUmPCxPRtLik4SrjAwAA\nAICO1O7J6ENJL4oc608fr8R+SQtFjs1J6jezzWuMDQAAAAA6Vlsno8652865rYXrQs1svySnykc0\nB5QaSfWzJMnS5wAAAAAAKtDWyagfM+uX9IGkI865v6zwsi1KVeL1s5xzDgAAAACgAm1fTVeSzKxL\nqXWfQUm7JR2ttIruGvTUuD8AAAAAaFsdkYw651YkXc58NrMrZibn3Jly16YT2UowMgoAAAAAFeq4\nabqSMknofjO7XsG5KxV2W2waLwAAAACgQEcmo2m3JB0psu3LWmRGRIsVOAIAAAAAFOiIabpFPFSq\nCu5xSeXWjy6r/DTcVSOjZuaqCw0AAAAA2oNzzvza23Zk1My6zOxTM6t0L9FSHim1L6mffqW2iXnk\nd9A5x0+L/Vy4cKHpMfDD99YpP3xvrfnD99aaP3xvrfnD99aaP3xvr35KadtkVK+q2z4vcjyTRH6/\ngr7iKp2MLjjnXq4tPAAAAADoXG2bjDrnPElXnXO/V+SUr0t64Zz700xDejT1pM+5k5L6zWybz7Hj\nksbXGS4AAAAAdJS2TUbTJtLbuORtz2JmpyTtkLSv4Pz7kq6a2dncRpeqqHta0qWCfvanDrvv1Dxy\nNE0oFGp2CKgC31tr4ntrTXxvrYnvrTXxvbUmvrfKWLl5vK3OzDZL+kNJXUoVLOqX9ELSe865vyk4\nd1zSOUn7nXMf+fT1jqQ9kpKSuiX1OOfOl7i3a/fnCwAAgI1tZGREMzMzmpub0/DwcHYd3/Lysl68\neKE9e/bo7Nmzq66bmprS8PCwlpbYNKIWZmdnZWZ6++23Vx2bn5/XzMyMgsGgksmkdu3apX37CsfN\nVqv2ukYyM7kiBYzavppuei3nSIXnjpQ61zl3R9KdGoUGAAAA1N34+LimpqY0MjKiixcvrjo+NTWl\ngYEB3b9/X5s3b862DwwM6Pjx42u61/z8vHbu3LnumNvN3Nycjh49qlu3bq065nmexsfHdf369Wzb\nsWPHtHXrVu3YUXwXymqv20jafZouAAAAgBJOnjypwcFBHTlyJK99586d+uCDD9bU18zMTC1Da3me\n5+nMmTPZUVE/ly5dWpX0nz59Wu+9917Jvqu9biNp+2m6zcQ0XQAAAGwEmZHR58+LbTQhbdq0STMz\nM77TSCs1MDCgR498dzzseNu3b9fk5OSq59vT06O5uTlt27Yt27aysqLu7m59+umnRfur9rpGKzVN\nl5FRAAAAADpy5IiuXr2a/Tw/P6/Z2dmKr5+YmND8/Hw9QmtbKysrWllZyUsoJamrK1V/9cmTJzW9\nbqNp+zWjAAAAAMrbs2ePxsdTOxaurKzo+vXrunz5sn72s59lz7l9+7a6u7slSS9evFA8HtfExISu\nX7+uhYUFSdL58+flnNP27dt14sSJvGvNTM+fP9fCwoJGRkayydP8/LyGh4c1MzOj5eVlxeNxSVI8\nHtfu3bt18mT+7ouzs7OKx+Pavn27JKm/vz9vxHFqakpmpu7ubj18+FCDg4MbrrCPpOwzK6ZY8ahq\nr8vIPO9Hjx5pbm4u+7wfP35c1fOuFskoAAAAAG3ZskXLy8t6+fKlurq6ND4+rsuXL2ePZxLR3CRk\nZmZGS0tLOnnypI4dO6apqSnfIkm3b9/Wrl27FAgEJKXWUu7bty87pXfnzp368MMPs1OFDx8+LEk6\nfPiwenp6dPz48WxxpVu3bmlqakp//ud/ntf/06dPtW3bNl2+fFnBYFDvvPNOto/t27drZmZm1Uhi\noQMHDhRd25nLOScz06VLl+paLGh5ebku1+3cuVM3b95Ud3e35ubmssln5ntcXl7WuXPnJBV/3p7n\n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\nZzQ/iugZZc4ogA2KmMuYdu7sW2+9Ffj42trFjLph8yQ/+tGP6he/+EVo2ctr72nuqTd05OM36Lmv\nSFq8QeOSFv7VFzTXOVuL+Sphyl66IkqcNmqKus1XGkVt+jxhdMX9HPN5r7f5+XktLS0FjvxBfghG\nARQubZAUJyFP2I/Fn/3Zn+nQoUPqdDr62Mc+pp/97GcD5ayd+w8Dj43/2oqO3C7d+g+kG65/R/rx\nH0m/2CVd+WDi+hel93iaWex1UItQVtKk7vBjyRtOW1SQOD4+riNHjqjT6TA0twIk4RoU5+ZTnjeo\nRjXxXp7ifo6TfN7rdBNyVHCDshzMGS0Qc0YxipKu6xm1TdR8momJifXXRM2TNLP19U37DcwFff0h\n6exJSdLzL7ygG66//uLGU89XMme06H2lKSPOnNHeOU9ZzxFZ51UVvTZpWlxcDmLOaPZ9jcr8zTpf\nexQ9ZzSP83vd1WHOaJn1aTvmjFb0Tw0dp5/UqLxPxNP/eYjz+YjaJsl6oWGPZZoLeuL69X/r65j6\na5kmqcew95n29Vn3laaM/seHZYPMeo5IO28nS5bKss9ree4v67zvqsVtt6znlryU+Vmpy3uOu88i\nP4t1v/YoMptuHuf3uiu63knLb+pxrAtFzBmlZ7RA9IxiFOXZM5q03KjHhvWehpYV1Vva99jqT3+p\nuafe0Gs/WtNnPj2m+S9dofHfum59iG/Te0aHZerNoy5B0mQ0rKI3NYui9tfk8/Owutell5Ce0Wrq\n1ZTPdhEZiekZLb/8ph7HuojqGSUYLRDBKEZR3GA06RDFrMFo1tdteCwgQF396S+19+7va3ntvfXt\nJ8c+rIXHf1vjH//Ihm21LXgOappgb1gAGOc4Fz0cN+s5Is2SK1mXaSEYrR7BaLp9EYzWC8FoOgSj\n7UIwWhGCUYyiND2jeZVbWjAa8Fho8LN7TEe+ulNSX8/q1PMbtksb7GXpRQ0Kfn/84x8HBq9/9Vd/\npWPHjg2+v57grqhgNE0vZ9b14fL63Ma96UIwOqjuwWiaNX2zqvo9Z9knwWg+28XZtg3z0QlG2yUq\nGCWbLgDkIDRF//tXaPVT/9K/aJVmXj3tDd9dvGHDdnN/clrLyxvT+S8vL2tubq6QrK79AV6n09HS\n0pIWFhbWs2f2mp6eDiwnzyUIoi6gkmY0rEtW1jplPu5qw4Vq1aK+P0UHpMAwfJebg/MxPaOFomcU\noyLqZDo9Pd3ontGg93bmzBlJ0vbt29cfe/bZZ/X6668P1PvGG2/UD3/4w429en3DdyVp+n/4N1p8\n9ezA63t78vLsGU06jDXO9nn2jGYtq45zRqPKrKpntM7n7zr3jGYdBp5W3XpGk/QO0zOaz3ZJt22q\nUewZbXO70jMKoFBNvYMXZ+3KuO/ttttuCwx+nHMbHpOk5bX3dOPDb+umm/6r9WD27DvfCyx37Nfe\njr3GZpL1AZMutt60xb/HWR9upBW9Lm3S708b0TuMqqXpVSxrzWok4Fz1S6C09Z9GJA30qLxPpJPX\n56O/nKBy4zzW/TvNci/DBKXon5qa2rCP7r/p6emN9fnLP3KTYx/eWJ+xD7vv/YtrBx//xJZU9ezd\nNs1yKUmXcCliaZU07VLWa7KUWdR5dFi5ee83z6U80tZ92Hc7jmHvI+1yQ1nFaa+yfpOTHoO86pXl\nvFKFuO877bm8rZK+xzjbZzk3lHHM29yuYmmXajBMF6OqiDkQZqYTJ05ElptkmG7YMLsrr7xSN910\nU6Z6JxkO25+xdkNP3sw2zf3pt9Q5NtjbcuPv/Cf66If/o9BlZIbVK8sw1izZd+fn5/XGG29ISpfQ\nJ88hv3m/JkuZbRymm7XstHXPewht0H6yDgNPq07DdJMmCcujXlUd9ywYpptOEcNos5wbGKabDcN0\nAZSqqGG7eZYbNszu0ksvDUzgk1aS4a3j4+M6cuSIOp3O+g/jW4+9JmkwGH3x1Fn9zd+9L0l6/a/X\ntPTvLmjhcWn8yhiVev0hjZ89qYX5T2ruqb/pCWg/qfFf/C+SwgPauObm5gaHJy8v6y/+4i82zDGt\nIqFP2M2SzZs368KFC5KGD3NGdYYNsxs2hDaPm2UMA68mSVjYeaWoRG9oF4bX1xPBKIDWiZo72VXW\nhVTWi9awenYD0a7ltfc099QbOvIHMQr110gd//hHdOSrO/X8C2u64fqdF5/ry/QrKXRt1DBl/Oin\nDSrqmOEW8cSZpzjsu51X+wfdPBolVcwjJ5hAFnXJso6NGKZbIIbpAvkJ+5wlDUi65RQ53CvL2p/9\njwXV81d/9Vf1t3/7twPlT+/YpuOn3x5er26w6a91uv746w+tB6pRNqyXGvL47Nd+rM5fDmYXjpN9\nN+q5NMN3qxgeW5d6tG2Ybpxhdkm+23kMe63LZ6iK+pSdTbeqLMZZMEw3nSKG6RYxPSVPbW7XqGG6\n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\nowAAAACA0v3/Xpk4wGNvIJAAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8d53915910>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dat = smart_observation('../planets/F2V_5.e-1fCO2_1.e6H2Volc_1.e10BIF.out_toa.rad', 1.0, T, P, S, saveplot=False, savedata=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nO3d0//59HT16VM65bVvOZPanrrebW7DksrGxodHRUa2vr6fvX09Pj44ePbrpvdaHDx+mK8/xeFxH\njhzZ9PssLS2pu7tb8Xh8UyW00HmFPPPMM1pcXFQ8HpeUqKz+zu/8zrZ3bgvd73ySi0hlzVxJRncR\nySgAAACAWvXss8/qyy+/3NVr5EtGmaYLAAAAAAgcySgAAAAANKBqz+IkGQUAAACABrK0tKT+/n6Z\nmV5//fVNi0sFiXdGdxHvjAIAAABoZLwzCgAAAACoKSSjAAAAAFBDNjY20nun1jOSUQAAAOx5g4OD\nOnDggJ555hm9/vrrunfvXrVDCsz09LRaW1urHcY2tRpXpc3Pz+f897a0tKTJyUnduXNHk5OTmp+f\nLzie7/s6f/68uru7Kx1qzflGtQMAAAAAyjU2NqZwOKzBwUG9++67JY2xtLSkQ4cOVTiyyskVX3d3\nt86ePVuFiBJqNa4gLC4u6vTp05qdnd3W5/u+xsbGdOPGjXTbmTNn1NbWpq6urpxjhkIh3bx5U88+\n++yuxFxLqIwCAAAAkubm5qodQl654jt06FDJCXgl1Gpcu8n3ffX392t+fl5mWdfm0fj4+LZk/OLF\ni3rjjTeCCHFPIBkFAAAApE0VrFpUq/HValy7KRQK6cqVK7p8+bJaWlqyHnPz5k0dPnx4U1t3d3fN\n/6dHkEhGAQAA0PAmJiZqesGYfPEtLS0V9S7ibqjVuKptY2NDGxsbeumllza1NzU1SZIePnwYaCxb\nn1Gq7enTp4HFkQ3vjAIAAKBuLS0taWBgQHNzc1pfX1c0GpUkRaNRHTlyROfPn9f09LSWl5clSW++\n+aacczpw4IDOnTuXHmd6elpmppaWFt2/f1+RSETHjx9P96cWUHLOaX19XZ2dnZKkqakpjY+P69y5\nc1peXtbi4qIePHigGzdu6Ec/+pFeffVVSdLt27dlZlpdXdXy8rIGBwfTiUu++DY2NnTjxg1NTk7q\nyy+/3PS73759W0+ePFFra6tWV1fV2tqq1157rej7UkgxcU1MTOirr74q+pq3b9+WJC0vL2t1dVVj\nY2PbrpnvOdSK1H3JZW1trahxnj59WvDZ5HvOvu9rYGBAt2/fTv/72NjY0MDAgKamprS4uKiuri4t\nLS3p/PnzOf+N3r59O10BfvLkiaLRqCYmJrRv374d3ZdtnHN87dJX4vYCAAAgCFNTU661tTVrn5m5\n27dvb2praWlxGxsbzjnn1tfX3TPPPJP13ImJiW3nhsNh5/u+c865gYEBNzg4uOn4yclJ55xLH7O+\nvu5aWlrS4wwODrrp6WnnnHOzs7NueXk5ff7y8rI7cuTIpuvli885t61vamoqHUNm28TExKa2Qvel\nkJ3Gle+aqfuRcuTIEbe0tJT+udBzyCcSibgTJ04U/Eodl3ndQsLhsJufn9/Utri4mPO+ZPv9iz1u\n67Mp9jlni+XAgQObfs9c/0ZnZ2e3/X79/f1F3XfnnEvmRFnzJSqjAAAAaAipamVKa2urlpeX865s\nurGxodHR0W2VrFOnTunq1asaHR3V7Oyspqam0n2HDx/W6dOndenSpfQ0zaampk0V09HR0fTxN27c\n0NTUlD744ANJifcRl5eX9fTp05IqT6nK19aYz58/r9bWVl28eHHTuKXcl3Jlu2a2YxYWFtTV1aX1\n9fWCzyGfDz/8sPygd6DYymch+Z7NTp/zVok88Wu5/o1OTk6qublZr7zySvrY06dPl/V7pZCMAgAA\noCFs/cO+GDdv3pSZ6c6dO3LOyczknNP+/fvV3NwsSWppadH6+vqm89ra2raNZWZZE7yJiQk55zQ/\nPy/f99XS0qKNjQ2tra2VlIzOzc1lvb6UuAc3b97cNAW5lPtSrmzXzLev5q1btwo+h1pSaH/VYmPO\n92x2+pyLke3f6KlTp3TkyBFFo1FFIhH19PRsSkzLQTIKAACAumdmJSV26+vram1tTb/bmc3g4KBu\n3LiRPubWrVsaGBgo+hpfffWVzpw5o4mJiXTykHpftBTLy8s5k53W1lbF4/H0z6Xel3KUcs1inkMt\nSSWRuarbhZJVqfB92slzLkcoFNKjR480Ojqqqakp9ff369SpUxVZRZlkFAAAANhiaWlJ4XBYnZ2d\nRU25vHjxYnpxnTNnzuyocnTixAlNTk5mPWdjYyNrYpqKL1uy0tzcvK1Sm7K2tpazmlYJ+eIqR7HP\nIZcTJ07k3A80U6rqOj4+XtY05aamJjU3N2+rbm9sbOSskO9UUM95fn5ex48f1+joaHrq7g9+8ANd\nu3Ztx5XXrUhGAQAA0PC2Jnxra2sKh8Pq6enR+vq6Hj16tG2bjjt37ujVV1/V8vKyLl++XNLURd/3\n5fu+fvjDH25qTyUZCwsLOnr0aM74sjlz5oz6+/uzVuWWlpY0Ozu74zhz2Ulc5cj3HG7fvp1ePTaX\noN8ZlRIxLy4ubor3/v376unpqcj45T7nQiv+pkSjUYXD4U2/x5UrVzZV8kvFPqMIxs/flmIns3/9\n/O1qRwcAAOrA1gVZiu1L6ezs1KNHjyQlksF9+/apqalJV69e3Tbtdn5+XocPH5aUSMB83y8pvtR0\nzdR1U2OHw+H08alEI1t82cZuamrS+Pj4tkV9JicnNTAwsCmpKOa+FFJsXOVcM99zOHLkyI7HC8LY\n2JiuXr26qS211U8xCt2nnTznzGckff1vbGu1Odc1t/4ey8vLikQiRfwW+T07PDxc9iDI7u233x7m\n/ib94s9z9/1/K9JL/yG4WAAAQN0ZHBzU9PS0Pv30U3366ad6/vnnFQqF5Pu+3nzzTS0uLurTTz/V\nt7/9bX3zm9/U8PCw3n//fS0vL6ujo0OhUEi/9Vu/pampKf3qV79SS0uLQqGQpMTquM8++6z+8i//\nUk+fPtUvfvELdXR06Dd+4zckSeFwWOFwWH/xF3+hiYkJXbt2Te+//76ef/55ffe739XS0pLefvvt\ndAy/+tWv9J3vfEeS9Gu/9mv6gz/4A42NjenZZ59Nj93d3a2f/OQnOnDgQPrYbPFt/f2+//3v67nn\nntPv/d7v6enTp3r//ff16aef6mc/+5laWlp0+fJlSdrRfSmk2LhWVlaKvubg4KBmZ2e1vLys/fv3\n6zvf+U7B5xCkjY0NDQ8Pa3Z2VvPz8/qHf/gH+b6vp0+fpp9XS0uLDh48qL/6q7/SP//zP+tnP/uZ\n/uiP/ki/+7u/m3fsnTybQs855fvf/75+8pOf6Fe/+pV+8Ytf6Lvf/a5++tOfanZ2Vt/+9rf1r//6\nrzn/jT58+FC///u/n+5bXFzUJ598ot7e3qLu1dtvv63h4eGs1SerxP+GIDszc9zfpNjJxHfvbnHt\nAAAAe4Dv+5qYmNDExIS+9a1vpdsfPnyogYEBnT59uuypjMBellz5OOsLu0zTBQAAAEo0Pj6uixcv\nbkpEJamrq0tXrlxRNBqtUmRA7SMZBQAAAEp04sSJnFtczM7OVuS9OqBesZouAAAAUKJXX31Vzc3N\nmpycVEtLi1pbW+Wck+/7OnLkSEkr7AKNgmQUlffzt6XVhWpHAQAAEIhXXnmFpBMoAdN0UXm5EtG2\n7mDjAAAAAFCzqIxi97BCLgAAAIAcqIwCAAAAAAJHMgoAAAAACBzJKAAAAAAgcCSjAAAAAIDAkYwC\n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\nBygyU2IFyO+oAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8d55fedbd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "T.resolution = 30.0\n",
    "dat = smart_observation('../planets/F2V_5.e-1fCO2_1.e6H2Volc_1.e10BIF.out_toa.rad', 10.0, T, P, S, saveplot=False, savedata=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n9dZb8vv9eT2jp59+Wn19fU9nOmaK8a8hyMwYY2v++YYflrQ4TXfxWXR3d6em5i7l9/upqAsAADYV\n13U1NDSkoaEh3XPPPan269evq6enR4cOHVr3VEZgM1usfJxxwS7TdFFywWBwxVoCx3EUDAbLFBEA\nAEBhBgcHdfz48bREVJJ27dqlM2fOKBQKlSkyoPKRjKLkPB6PQqGQ/H6/dn5E8nc0KRQKUbwIAABs\nOvv378+6xcWlS5eKsq4OqFZM091AtTpNNxwOKxwOS5Ji3/m/dP2G1evuT+TxePTwww/r7/7u7+T1\neiVJv/CDp/W1Jx6SvM+XL2AAAIB1uHLliq5du6aGhgY1NjbKWivXddXS0lJQhV2gmuSapksyuoFq\nNRlNcl1Xn9vdrLfj77c5jqNoNJpaP/r8SaOHHyIZBQAAAKoRa0ZRFoFAIC0RlaRoNFqeYAAAAABU\nFJJRbJibN2+WOwQAAAAAFequcgeA6rVt27b8Tw4/LG1tk3Y+tXEBAQAAVIiJiQldvXpV9957r6y1\namho0JEjRzQ8PJzaI7K3t1eTk5OamZnRzMyMdu3aldbH8PCw+vv7tXXrVvX09KS2kFl6XU9PT2p5\n1MLCgowxOnbsmHbv3l3aD7zMxMSEXNeVtVbRaFSO46zYGzOTSCSiycnJ1NKvlpYWdXR0lCDi4sc0\nNTWlixcvaseOHYpGozp48GDO6+LxuHp6enTmzJlihl9WrBndQKwZzb5m9KmnEkmn+93n5PnlX5Ak\neXdtlff//NtyhAoAAFAyY2NjisfjOnnyZKotHo/r6NGjisfjevHFF1PtZ8+e1bVr13T16lVNT0+v\n6Ovy5ctqbm5ekaiOjY2pt7dXc3Nzae2u68rn82loaEiPPfZYkT9ZfiYmJtTQ0JBW3KmtrU2PP/54\n2jNZznVd9fb2plUv7urq0te+9rUVn79QkUhkTYl6oTFdunRJY2Njae96//79Gh0d1fbt2zNec+LE\nCd26dStr9eZKxZpRlIXH49F/OpTYukWS/H5/aq+tvr4+9fX16Zv//Yb6nvuf6vvy/fLuurec4QIA\nAJTE4ODgiqSrrq5Ox48fz3j+wMCAZmZmdPbs2RXH6urqVF9fn/e9PR6Penp6dPDgQd2+fXttgRdJ\npmSqs7NTIyMjOa8bHBzU4cOH09qOHz+uJ598smixTU5Orun8QmM6duyYent7877OdV3Nz8+vKbbN\n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\nAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8d5390c250>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "T.resolution = 70.0\n",
    "dat = smart_observation('../planets/F2V_5.e-1fCO2_1.e6H2Volc_1.e10BIF.out_toa.rad', 70.0, T, P, S,\\\n",
    "                           saveplot=False, savedata=False, ref_lam=0.94)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\neTntaFohZKprK3L9HNJpb2+XMSbrefFR1+Hh4ZxWu71+/XrK0cuKigpVVlZuGN2ORqNpR8g3q1if\n8+zsrFpaWjQ4OKjBwUFJ0jPPPKOrV69ueuR1PcIoCi7dVi2O46itrS3pv9J4PB4NDAwUsToAAICN\n1ge+5eVleTwetba2KhKJ6N69exu26bhx44ZOnDihcDisCxcu5DV10XEcOY6j5557Lqk9HjLm5ubU\n3Nyctr5UOjo61NPTk3JULhgMampqatN1prOZurYi0+cwPT2dWD02nQ8++KDgNUnSnTt30h5rbW3V\n/Px8Ur23b99Wa2trQV57q59zthV/4/x+vzweT9L7uHLlStJIfr72belqIFcfvy73/f8o/8ATOtty\nUHX/XjrbclD+gSfk/v/+ttTVAQCAMhBbK2Xzx+Jqamp07949SbEwuH//flVUVGhsbGzDtNvZ2Vk1\nNDRIigUwx3Hyqi8+XTP+uvG+PR5P4vx40EhVX6q+KyoqNDw8nBjFihsdHVVvb29SqMjlvmSTa11b\nec1Mn0NjY+Om+yuU5eXltFNuh4aGNDY2ltQW3+onF9nu02Y+57WfkfTb37H1o83pXnP9+wiHw2pr\na8vhXWT2SHwKJQrv9ddfv8z9XfWj/0uS5Hr83+nEt7+ir/4PP9alc0/L9fi/k365KB3+yxIXCAAA\ndrO+vj75fD59+umn+vTTT/XYY4/J7XbLcRxdunRJ8/Pz+vTTT/XVr35VX/rSl3T58mXdvHlT4XBY\nhw4dktvt1je/+U2Nj4/r17/+tVwul9xutySpoaFBjzzyiP72b/9WDx8+1I9+9CMdOnRIf/iHfygp\nNtPL4/Hob/7mbzQyMqKrV6/q5s2beuyxx/SNb3xDwWBQr7/+eqKGX//61/r6178uSfrd3/1d/fmf\n/7mGhob0yCOPJPpuamrSd7/7XdXW1ibOTVXf+vf37W9/W48++qj+9E//VA8fPtTNmzf16aef6gc/\n+IFcLpcuXLggSZu6L9nkWtfi4mLOr9nX16epqSmFw2EdOHBAX//617N+DqUwOzsrSTp9+vSGYy6X\nS3V1dfq7v/s7/exnP9MPfvAD/cVf/IX+5E/+JGOfm/lssn3Ocd/+9rf13e9+V7/+9a/1ox/9SN/4\nxjf0D//wD5qamtJXv/pV/du//Vva39GFhQX92Z/9WeLY/Py8fvrTn+rs2bM53aPXX39dly9ffj3V\nMVOI/xqC1Iwxlvu7KvBs7F/v9yUpsQLa+nYAAIDdxHEcjYyMaGRkRI8//niifWFhQb29vTp9+vSW\npzICu9nq3/0pH9gljG4jwugagWcVWPi5ApFnYj8GArHnSu/9J3mPVMv7V/9Y2voAAADy0NPTo56e\nnpQL0jiOk1hpF9irMoVRFjBC0XiPHJDXezm5MZD+oW8AAICdrr29XRMTEynD6NTUVEGeqwPKFWEU\nAAAAyNOJEydUWVmp0dFRuVwuVVVVyVorx3HU2NiY1wq7wF5BGEXhffy6tDRX6ioAAACK4tixY4RO\nIA9s7YLCSxdEq5uKWwcAAACAHYuRUWwfVsgFAAAAkAZhFAAAACiy6elp3b59WwcOHJC1Vi6XS+fO\nndPo6Ghij8i+vj7NzMxofn5e8/PzGxZJGh0d1eDgoKqrq9Xb25vYQmbtdb29vYrv7hCJRGSMUVdX\nl+rr64v7htdwHEe9vb26dOmS6uvrFQ6HNT09LY/HoxMnTmS8Nn7fIpGIHMfRqVOndP78+SJVnlow\nGNTMzIw8Ho9CoZAaGhrU0tKS9brZ2VlNTk6qtrZWoVBIp06dynhdNBpVb2+vrly5UsjyS4qtXbbR\nnt3aZTN7h7LPKAAA2GN8Pp+i0aheffXVRFs0GtX58+cVjUb1/vvvJ9qvXr2qO3fu6Pbt25qb2/go\n1I0bN1RTU7MhqPp8PvX19WlpaSmp3XEctbW1aWRkJGvw2y6O48jj8ST2nXe5XBoeHs66H2s8sMbf\nazQaVWNjo3p6epLu5VYEg8FNBfVU2/d0dHTor//6r1OusBw3NTUln8+X9Fm3t7drfHxchw8fTnlN\nT0+PVlZWdt1WQZm2duGZUQAAAKCIhoeHN4SniooKdXd3pzx/aGhI8/Pzunr16oZjFRUVqqyszPm1\n3W63ent7derUKT18+HBzhRfQzMyMQqGQ5ufntbS0lDWISlI4HE4KeBUVFRoeHlZvb29B69qM4eFh\nnTlzJqmtu7tbFy9ezHhdV1eX+vr6cr7OcRwtLy9vqrbdgDAKAAAAFEk0Gk0bKlpaWlRTU7OhPR66\nLl68WJAAWVNTI2OMwuHwlvvaisOHD2ccPVzLcRxNTEzo3r17Se0NDQ2SpIWFhYLUtNlRx+vXrydq\niGtqasoYah3HUTQaldvtTmpvaGjQ1NRUymtmZmbKcs9awigAAABQJBUVFYpEIrp161bK442NjUk/\nxx/5unDhgqqqqgoyCnjnzh1VVlbmHAR3gqqqKgWDwZQBulCPxY2MjCgYDOZ8fjQaVTQa3TCttqKi\nQlL6gByJRCTF3tNaVVVVMsZsCNyzs7NlGUQlFjACAAAAiurixYs6deqUhoeH1dHRkQgvkjZMVzXm\nt4/ajY2Nqb29Xb29vWmfK8wmGAxqcnIybRgullAopEgkImttYqQ400JEFRUV+vzzzze037lzR8aY\nnIL19PS0jDFaWlpSOBxWX19f4t77fL5E0L106ZKstaqtrc04fTjbyHK6EfCamprE+96/f3/SMWut\nwuFw0ufrOE5OCyKl4/P5NDk5qQ8++CDRFh+ZvXfvnvbv369gMKje3l7NzMwoEonI7/dLkvx+vxob\nG3X+/HlNT09Lir3vpaUlDQ0N5V1THGEUAAAAKKKhoSEZY9TT06Oenh7V19ertbVV3d3dG6ZurtXS\n0qKTJ0/q1KlTKRczSuXGjRuSYiFnbGxMjY2Nun379qbqbW9vTwrF6VhrZYzR8PBwxnBYVVWl6urq\npAWUenp6JGUOpKkMDQ3lNFo8PT2thoaGxP2NB7z4fTx//rw6Ojrk8/k0ODi4qRrSiY+ArldRUaHG\nxsYNoTNey9rrpqenc3qeNpPJyUl5PJ6kNr/fr2g0mgjD9fX1+uCDD7Rv3z7NzMzo5MmTkqSTJ08m\nRmzX1tHU1KSFhYUtj64TRgEAAIAiGxwc1ODgoG7duiW/36+pqSmNjo7qzp07Gf/A9/l8qqqq0o0b\nN3JaDXftOSdPnlRHR0fS9jG5WDuiVggVFRUbau/u7lZLS8umwujU1JSMMfrOd76T9dyJiQmNj48n\nVq91u90Kh8N6+PDhhtHJXG1lQaHr16+rp6dHx44dkxQbqYxvvRNfkCoajeb0HwGymZmZ0csvv7yh\nrbW1NeX5659bXj+dOH7O3NwcYRS7X2Dh5woELse+DwTk9XolSV6vN/E9AABAOTp27JiOHTumwcFB\nvfzyyzp9+rT++Z//Oe35FRUVGhoa0vnz5/PamsXn88nlcun06dN5T/XdDjU1NYpGo7p3715OdUUi\nEfl8vpynG4+MjMhaq9nZWTmOI5fLlVhMKt8wmiqkrZVplWO3263JyUn5fD5VV1ersrJSra2tstYm\n+r1+/fqW91Cdn5+XMWbDNN+5uTk9//zzKa9JtYhWU1PTlupIhzCKkvMeOSCv97Kk2HMRgUCgpPUA\n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\nT6q31mI6AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8d58b70510>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "T.resolution = 30\n",
    "dat = smart_observation('../planets/F2V_5.e-1fCO2_1.e6H2Volc_1.e10BIF.out_toa.rad', 70.0, T, P, S,\\\n",
    "                           saveplot=False, savedata=False, ref_lam=0.94)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nwIBeeuklXX755RocHAw9b7bcx4dRSx/KzHdxfPgAoL5RwKiCKGAEIG5BlW3rusBO8mb1/PEPlXx1\nOmtX84UX6ORb72Vt7+np0Y4duSvzDgwMFF0oKWdRnM4fFT8kuIYVKv6Tr+JwmH9n5T4+jDieA8Xz\nC5hUuxkAqiBfAaPz4m4MAKByOjs7tXPnTu3bt087d+5siJvvXHM5mz/0G4Hb29ra8s4bLGUYZyKR\n0KOPPqrDhw/r5MmTOnz4sB599FEviDaQVK/xyMiITp06pZGREe3du1cdZ/dIyZs1cPvvBb+vt/+e\nN3e2gHzXJSqdnZ0aGhpSf3+/JO9DBoJo9YyPj2vjxo2SvCrb4+PjVW4RgFrCMF0AQO1qXaXB294O\nnMv5V1/5tD73Z9/PHjrrr3MaZGpqqjLDOJM3B28ea9Wef2iqm2VGcobFP39GO/90pSan3wl83NTM\nO97c2RzvgySpdVUs8zlTQ0OXLVum1atXa9myZXryyScZGloFmb3Uu3bt0v79+/lwAMAswigAoHZ1\n36eJ6aT6NmQPHT10qlN9fdlBb2JiIm/gzLXszODgYPHta12l5Ivf1Z6/+7mGX5nRzOmzalm8UD0r\nWrTu9y9Tx6Vva+/eY7W/zIi/NuvkT34YuHtqxguh7R/9pPRq9hDntstCBPnpA2o//7XAXW3nHQlV\nlTjMGqKEztpBZWMAhRBGAQA1rZRw0dHRkTNw5iuiVHRvTfd96rjwD7T3670aHX9TkjQ5/abOnPeb\n2rphoQZ2HNHo6Nxev5q8GfcrAudc3qZlgddLPfgHwe/r1/9Gyvfe+WF38LZrclYsDlOVOOcaop+U\nlPzzwq+zdZWS06sLBtpaUs9FgKhsDKAQwigAoOHkC5xR38Tn7P3ZcTb3sNYavRkf3Pb94KrB24ak\nzk5NJJOlBXm/x3MiGdzLPfGLH6nzsg/lfrwfZge+cig43PvDiAuaPqCOjj8IDrRpvdVhemDjEkcF\n4kqhsjFqST1/sNPIqKZbQVTTBYDG19PTM3uDM2f7ila1tSzQrhezg2e+yr1V4c/1TOpL1Qlhqed/\n9fhs5eTj09O6uLVVkpS4tlWJay/OWVm5Z0Wr9j35R/mH+frPsfErh4KvyZo27fzfN0vd99VURd5a\nakux8rb9rf8z/Bq9rasKDuEGikF153jlq6ZLzygAAGXI2fvTsiD3sNS+KSX/4ndyzjVNrPlkxW6+\n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\nNg8AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8d538a8250>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "T.resolution = 70\n",
    "dat = smart_observation('../planets/F2V_5.e-1fCO2_1.e6H2Volc_1.e10BIF.out_toa.rad', 70.0, T, P, S,\\\n",
    "                           saveplot=False, savedata=False, ref_lam=0.94)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\na9cuWWtXbTmTfDx+v0JuwZJJNBrV0NCQlpaWEs+vu7tbu3btSlnXev369cTIcyQSUXt7e8rnCYfD\n6ujoUCQSSRkJXeu6tWzbtk2zs7OKRCKSYiOrX/ziF1etuV3reWezXEQqbeZKMlpAJKMAAAAAytUd\nd9yh999/v6D3yJaMMk0XAAAAAFB0JKMAAAAAUIVKPYuTZBQAAAAAqkg4HFZfX5+MMXr88cdTiksV\nE2tGC4g1owAAAACqWbY1o+wzioIJhUIKhUKJ7zs7OyVJnZ2die8BAAAAVCdGRguIkdEPLf+LSKnD\nAAAAAMpeNBrV3NycWltbSx3KplFNFwAAABVtYGBALS0t2rZtmx5//HFdvny51CEVTSAQUH19fanD\nWKVc48qHgYEBua675nnhcFhjY2O6ePGixsbGND09veY1ruvqyJEj6ujoyEeoZY1pugAAANjyhoeH\n5TiOBgYG9Oyzz+bURzgcLuuRqEzxdXR06PDhwyWIKKZc4yqk2dlZOY6T9pjjOHrzzTfluq6Gh4d1\n9uzZxLFDhw6poaFBO3fuzNi3x+PRuXPndMcdd+Q97nLDyCgAAAAgaWpqqtQhZJUpvtbW1pwT8Hwo\n17gKyXEchcNhzc3NpXyNj4/rwoULkqSRkZFVyfixY8f05JNPliLkskQyCgAAAEgpI1jlqFzjK9e4\nCsnr9eoLX/iCduzYkfIlSV/4whckSefOnVNbW1vKdR0dHWX/jx7FxDRdFB1VdgEAQLkZHR1VOBwu\ndRgZZYsvHA5rYWFBXV1dRY6qfOMqtEceeWRVWyAQ0JEjRyTFChBFo9FEghpXU1MjSbp+/XrWqbr5\nlK4YUrzNcRxt3769KHGkQzKKgnJdVz6fT5LU29srv9+fknQaYxKJKQAAQL6Fw2H19/drampKS0tL\nCgaDkqRgMKj29nYdOXJEgUBAc3NzkqQTJ07IWquWlhY99thjiX4CgYCMMaqrq9PVq1fl9XpTkqx4\nASVrrZaWltTc3CxJGh8f18jIiB577DHNzc1pdnZW165d09mzZ/Xoo48mkprJyUkZY3Tr1i3Nzc1p\nYGAgkbhkiy8ajers2bMaGxvT+++/n/LZJycntbi4qPr6et26dUv19fXav3//up/LWtYT1+joqD74\n4IN133NyclKSNDc3p1u3bml4eHjVPbO9h1KZnp7Wrl27Ej/Hn0smCwsL6+r39u3ba76bbO/ZdV31\n9/drcnIy8fsRjUbV39+v8fFxzc7OaufOnQqHwzpy5EjG39HJyUnV1dVJkhYXFxUMBjU6Orr5RNZa\ny1eBvmKPt3rNzc1Zx3GspMSX4zh2bm4ucU61PyMAAJA/4+Pjtr6+Pu0xY4ydnJxMaaurq7PRaNRa\na+3S0pLdtm1b2mtHR0dXXes4jnVd11prbX9/vx0YGEg5f2xszFprE+csLS3Zurq6RD8DAwM2EAhY\na629cOFCyt+P5ubmbHt7e8r9ssVnrV11bHx8PBFDctvo6GhK21rPZS0bjSvbPePPI669vd2Gw+HE\nz2u9h2y8Xq/dt2/fml/x85Lvux7J799aa2dnZzM+l3Sff73nrXw3633P6WJpaWlJ+ZyZfkcvXLhg\np6enU67t6+tb13O3NvH3/fT5UqYDfJGMblZPT09KIhr/6unpSZxT7c8IAADkz1rJ6MoEw3GcRFum\npCr+F/SVkhNQx3FS/rI+NTWV9pp0MVhr7cGDB+2+fftS2lYmHRtJ+jLFnK7ftZ7LWnJNRtPdc2Uy\nevDgwUTb4uLimu+hVNIla1NTU3lJRtf6nV3ve04XS7r3nO6eo6Ojdnx8PKVteno6L8ko03RRMDdv\n3kzbPj8/X+RIAAAAlJg6uxHnzp2TMUYXL16UtVbGGFlrdc8996i2tlaSVFdXp6WlpZTrGhoaVvVl\njEm7TnB0dFTWWk1PT8t1XdXV1SkajWphYSGnaZBTU1Np7y/FnsG5c+dSpiDn8lw2K909s+2ref78\n+TXfQ6kMDQ2t2td2rf1V1xtztnez0fe8Hul+Rw8cOKD29nYFg0F5vV51d3dr7969G+o3E5JRFExT\nU1Pa9sbGxiJHAgAAqp0xJqfEbmlpSfX19WkL1sQNDAzo7NmziXPOnz+v/v7+dd/jgw8+0KFDhzQ6\nOppIHuLrRXMxNzeXMdmpr69XJBJJ/Jzrc9mMXO65nvdQCtFoVK7rrvo88STy9u3baT/rWsmqtPZz\n2sh73gyPx6MbN25oaGhI4+Pj6uvr04EDB/JSRZlkFAXj9/t15ZW/VGT+3URb3d0f0bb5F/S7PV/S\nK6//QtKHhY08Hk+pQgUAAEgRDoflOI6am5vXVWzm2LFjieI6hw4d2tDI0b59+zQ2Npb2mmg0mjYx\njceXLlmpra1dNVIbt7CwkHE0LR+yxbUZ630Pmezbt0/GmDXPi4+6joyMrKva7blz59KOXtbU1Ki2\ntnbV6HY0Gs04Qr5RxXrP09PT6urq0tDQkIaGhiRJX/nKV3T69OkNj7yuRDKKgvF4PAo+8yX5nntD\nE9Pz6vkX98vfe4+mLr+ikb/5QSJJnZiY0JUrVxQMBklIAQBASaxM+BYWFuQ4jrq7u7W0tKQbN26s\n2qbj4sWLeuSRRzQ3N6cnnngip6mLruvKdV09/PDDKe3xJGNmZka7du3KGF86hw4dUl9fX9pRuXA4\nrAsXLmw4zkw2EtdmZHsPk5OTieqxmbz88st5j0mSrl27lvFYd3e3ZmdnU+K9evWquru783Lvzb7n\ntSr+xgWDQTmOk/I5Tp48mTKSn6ttm7oaWIPnE3fpzDdjm/2eefH78vzOZf3JS0oZLZWkSCSS2AIG\nAAAgF7FaKRs/Ftfc3KwbN25IiiWD27dvV01NjU6dOrVq2u309LTa2mJ/x1lYWJDrujnFF5+uGb9v\nvG/HcRLnxxONdPGl67umpkYjIyOJUay4sbEx9ff3pyQV63kua1lvXJu5Z7b30N7evuH+8mVhYSHj\nlNvh4WGdOnUqpS2+1c96rPWcNvKek9+R9OHv2MrR5kz3XPk55ubm5PV61/EpsrtjcHBw050gvaef\nfnqw6p/vjb+QJD39/N8r/iz+1//j6bSn3nPPPfr6179erMgAAEAFGRgYUCAQ0Ntvv623335bd955\npzwej1zX1YkTJzQ7O6u3335b9957rz760Y9qcHBQL774oubm5tTU1CSPx6PPfe5zGh8f13vvvae6\nurrEjK22tjbdcccd+rM/+zPdvn1bP/zhD9XU1KRf+7VfkyQ5jiPHcfQnf/InGh0d1enTp/Xiiy/q\nzjvv1Gc/+1mFw2E9/fTTiRjee+89feYzn5Ek/cqv/Ip+8zd/U8PDw7rjjjsSfXd0dOhb3/qWWlpa\nEuemi2/l5/vyl7+sX/7lX9Zv/MZv6Pbt23rxxRf19ttv69KlS6qrq9MTTzwhSRt6LmtZb1zz8/Pr\nvufAwIAuXLigubk53XPPPfrMZz6z5nsohenpaUnSwYMHVx2rq6vT/fffrz//8z/XT37yE126dElf\n+9rX9Ou//utZ+9zIu1nrPcd9+ctf1re+9S299957+uEPf6jPfvaz+s53vqMLFy7o3nvv1T/90z9l\n/B29fv26HnjggcSx2dlZvfXWW+rp6VnXM3r66ac1ODiYNgEw+fjXEKRnjLFV/3xDD0mSzJ5LiX9p\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f8d54030410>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "T.resolution = 70\n",
    "P.alpha = 90.\n",
    "dat = smart_observation('../planets/F2V_5.e-1fCO2_1.e6H2Volc_1.e10BIF.out_toa.rad', 70.0, T, P, S,\\\n",
    "                           saveplot=False, savedata=False, ref_lam=0.94)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
